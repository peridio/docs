"use strict";(self.webpackChunkparasola=self.webpackChunkparasola||[]).push([[4468],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=i,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<r;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7905:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var a=n(7462),i=(n(7294),n(3905));const r={},o="Getting Started",l={unversionedId:"cli",id:"cli",title:"Getting Started",description:"Peridio CLI, or peridio, is a command-line interface to Peridio for use in your terminal or your scripts.",source:"@site/docs/cli.md",sourceDirName:".",slug:"/cli",permalink:"/cli",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"cli",next:{title:"create",permalink:"/cli/ca-certificates/create"}},p={},s=[{value:"Installation",id:"installation",level:2},{value:"Upgrade",id:"upgrade",level:3},{value:"Precedence of Supplied Values",id:"precedence-of-supplied-values",level:2},{value:"Configuration Files",id:"configuration-files",level:2},{value:"config.json",id:"configjson",level:3},{value:"credentials.json",id:"credentialsjson",level:3},{value:"Global Options",id:"global-options",level:2},{value:"API Key",id:"api-key",level:3},{value:"Base URL",id:"base-url",level:3},{value:"CA Path",id:"ca-path",level:3},{value:"Config Directory",id:"config-directory",level:3},{value:"Organization Name",id:"organization-name",level:3},{value:"Profile",id:"profile",level:3}],c={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getting-started"},"Getting Started"),(0,i.kt)("p",null,"Peridio CLI, or ",(0,i.kt)("inlineCode",{parentName:"p"},"peridio"),", is a command-line interface to Peridio for use in your terminal or your scripts."),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"peridio")," is available as a downloadable binary from the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/peridio/morel/releases"},"releases page"),"."),(0,i.kt)("h3",{id:"upgrade"},"Upgrade"),(0,i.kt)("p",null,"The CLI can upgrade itself in place via ",(0,i.kt)("inlineCode",{parentName:"p"},"peridio upgrade"),"."),(0,i.kt)("h2",{id:"precedence-of-supplied-values"},"Precedence of Supplied Values"),(0,i.kt)("p",null,"Options can be supplied in up to three ways, from highest to lowest precedence:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"CLI arguments"),(0,i.kt)("li",{parentName:"ol"},"Environment variables"),(0,i.kt)("li",{parentName:"ol"},"Configuration files")),(0,i.kt)("h2",{id:"configuration-files"},"Configuration Files"),(0,i.kt)("p",null,"The Peridio CLI supports profile based configuration files as a means of supplying options that are relevant to many subcommands. A particular profile can be choosen explicitly via ",(0,i.kt)("a",{parentName:"p",href:"#profile"},"--profile"),". To use this functionality you must specify at least a ",(0,i.kt)("inlineCode",{parentName:"p"},"config.json")," file and optionally, if you wish to specify API keys via this method, a ",(0,i.kt)("inlineCode",{parentName:"p"},"credentials.json")," in the same directory."),(0,i.kt)("p",null,"By default, the directory searched for these files is:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Linux: ",(0,i.kt)("inlineCode",{parentName:"li"},"$HOME/.config/peridio")),(0,i.kt)("li",{parentName:"ul"},"Windows: ",(0,i.kt)("inlineCode",{parentName:"li"},"{FOLDERID_RoamingAppData}/peridio/config")),(0,i.kt)("li",{parentName:"ul"},"macOS: ",(0,i.kt)("inlineCode",{parentName:"li"},"$HOME/Library/Application\\ Support/peridio"))),(0,i.kt)("p",null,"To override this directory, see ",(0,i.kt)("a",{parentName:"p",href:"#config-directory"},"--config-directory"),"."),(0,i.kt)("h3",{id:"configjson"},"config.json"),(0,i.kt)("p",null,"Contains a single object of the format:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Example"',title:'"Example"'},'{\n  "my-first-profile": {\n    "organization_name": "my-organizations-name"\n  }\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Schema"',title:'"Schema"'},'{\n  PROFILE_NAME: {\n    "base_url": BASE_URL,\n    "ca_path": CA_PATH,\n    "organization_name": ORGANIZATION_NAME\n  },\n  ...\n}\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"BASE_URL"))),(0,i.kt)("p",null,"Optional. String. See ",(0,i.kt)("a",{parentName:"p",href:"#base-url"},"--base-url"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"CA_PATH"))),(0,i.kt)("p",null,"Optional. String. See ",(0,i.kt)("a",{parentName:"p",href:"#ca-path"},"--ca-path"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"ORGANIZATION_NAME"))),(0,i.kt)("p",null,"Optional. String. See ",(0,i.kt)("a",{parentName:"p",href:"#organization-name"},"--organization-name"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"PROFILE_NAME"))),(0,i.kt)("p",null,"The name of a profile. Can correspond to an entry in credentials.json. A particular profile can be choosen explicitly via ",(0,i.kt)("a",{parentName:"p",href:"#profile"},"--profile"),"."),(0,i.kt)("h3",{id:"credentialsjson"},"credentials.json"),(0,i.kt)("p",null,"Contains a single object of the format:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Example"',title:'"Example"'},'{\n  "my-first-profile": {\n    "api_key": "my-api-key"\n  }\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Schema"',title:'"Schema"'},'{\n  PROFILE_NAME: {\n    "api_key": API_KEY\n  },\n  ...\n}\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"API_KEY"))),(0,i.kt)("p",null,"Optional. String. See ",(0,i.kt)("a",{parentName:"p",href:"#api-key"},"--api-key"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"PROFILE_NAME"))),(0,i.kt)("p",null,"The name of a profile. Must correspond to an entry in ",(0,i.kt)("inlineCode",{parentName:"p"},"config.json"),". A particular profile can be choosen explicitly via ",(0,i.kt)("a",{parentName:"p",href:"#profile"},"--profile"),"."),(0,i.kt)("h2",{id:"global-options"},"Global Options"),(0,i.kt)("p",null,"Global options are options that are relevant to many commands. They are supplied after ",(0,i.kt)("inlineCode",{parentName:"p"},"peridio")," but before a command, e.g., ",(0,i.kt)("inlineCode",{parentName:"p"},"peridio --profile foo products list"),"."),(0,i.kt)("h3",{id:"api-key"},"API Key"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"-a"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"--api-key <api-key>"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"$PERIDIO_API_KEY")),(0,i.kt)("p",null,"The API key used to authenticate and authorize requests against the Peridio Admin API."),(0,i.kt)("p",null,"Can be provided via configuration files."),(0,i.kt)("h3",{id:"base-url"},"Base URL"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"-b"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"--base-url <base-url>"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"$PERIDIO_BASE_URL")),(0,i.kt)("p",null,"Defaults to ",(0,i.kt)("inlineCode",{parentName:"p"},"https://api.cremini.peridio.com"),"."),(0,i.kt)("p",null,"The base URL of the Peridio Admin API."),(0,i.kt)("p",null,"Can be provided via configuration files."),(0,i.kt)("h3",{id:"ca-path"},"CA Path"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"-c"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"--ca-path <ca-path>"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"$PERIDIO_CA_PATH")),(0,i.kt)("p",null,"A path identifying a file containing PEM encoded CA certificates to additionally trust when making API requests."),(0,i.kt)("p",null,"Can be provided via configuration files."),(0,i.kt)("h3",{id:"config-directory"},"Config Directory"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"-d"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"--config-directory <config-directory>"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"$PERIDIO_CONFIG_DIRECTORY")),(0,i.kt)("p",null,"Defaults to ",(0,i.kt)("inlineCode",{parentName:"p"},"$HOME/Library/Application\\ Support/peridio")," on macOS."),(0,i.kt)("p",null,"A path identifying the directory the CLI should look within to find Peridio CLI configuration files."),(0,i.kt)("h3",{id:"organization-name"},"Organization Name"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"-o"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"--organization-name <organization-name>"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"$PERIDIO_ORGANIZATION_NAME")),(0,i.kt)("p",null,"If applicable, the case-sensitive name of the organization against which Peridio Admin API requests will be executed."),(0,i.kt)("p",null,"Can be provided via configuration files."),(0,i.kt)("h3",{id:"profile"},"Profile"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"-p"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"--profile <profile>"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"$PERIDIO_PROFILE")),(0,i.kt)("p",null,"Explicitly chooses a profile within a ",(0,i.kt)("inlineCode",{parentName:"p"},"config.json")," to use. See ",(0,i.kt)("a",{parentName:"p",href:"#configuration-files"},"configuration files"),"."))}d.isMDXComponent=!0}}]);