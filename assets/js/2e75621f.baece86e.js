"use strict";(self.webpackChunkparasola=self.webpackChunkparasola||[]).push([[8109],{43483:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>l});var t=n(74848),r=n(28453);const s={},c="Creating Devices",d={id:"platform/guides/creating-devices",title:"Creating Devices",description:"This guide describes how to create devices.",source:"@site/docs/platform/guides/creating-devices.md",sourceDirName:"platform/guides",slug:"/platform/guides/creating-devices",permalink:"/platform/guides/creating-devices",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"platform",previous:{title:"Creating CA Certificates",permalink:"/platform/guides/creating-ca-certificates"},next:{title:"Creating Products",permalink:"/platform/guides/creating-products"}},o={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create One Device",id:"create-one-device",level:2},{value:"Create Devices in Bulk",id:"create-devices-in-bulk",level:2},{value:"Peridio Device Import Manifest",id:"peridio-device-import-manifest",level:3},{value:"Microchip TrustPlatform Manifest",id:"microchip-trustplatform-manifest",level:3}];function a(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h1,{id:"creating-devices",children:"Creating Devices"}),"\n",(0,t.jsx)(i.p,{children:"This guide describes how to create devices."}),"\n",(0,t.jsxs)(i.p,{children:["To learn more about Peridio devices in general, see the ",(0,t.jsx)(i.a,{href:"/platform/reference/devices",children:"devices"})," reference."]}),"\n",(0,t.jsx)(i.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"https://github.com/peridio/morel/releases",children:"Peridio CLI"}),".","\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Last tested with version 0.8.0."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"create-one-device",children:"Create One Device"}),"\n",(0,t.jsx)(i.p,{children:"Devices may be created one at a time using the Peridio CLI, Peridio Admin API, or the Peridio Web Console."}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-console",children:"peridio devices create \\\n  --identifier my-device \\\n  --product-name my-product\n"})}),"\n",(0,t.jsx)(i.h2,{id:"create-devices-in-bulk",children:"Create Devices in Bulk"}),"\n",(0,t.jsx)(i.p,{children:"Devices may be created in bulk using the Peridio Web Console."}),"\n",(0,t.jsx)(i.p,{children:"Peridio supports two file formats for creating devices in bulk, the Peridio Device Import Manifest and the Microchip TrustPlatform Manifest."}),"\n",(0,t.jsx)(i.h3,{id:"peridio-device-import-manifest",children:"Peridio Device Import Manifest"}),"\n",(0,t.jsx)(i.p,{children:"This is a CSV file that expects the following headers to be included in this order:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"identifier"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"The identifier for the devices, must match the common name of the device's certificate(s)."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"description"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"The description you wish to apply to the devices."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"tags"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"The tags you wish to apply to the devices. Multiple tags are separated with commas."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"product"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"The name of the product you wish to add the devices to."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"org"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"The name of the organization you wish to add the devices to."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"certificates"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["The certificates you wish to associate with devices. Values for this field should be PEM encoded certificates. If a device has multiple certificates, separate them with ",(0,t.jsx)(i.code,{children:"\\n\\n"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"target"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"The target you wish to add to the device."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"It is recommended that you quote every field."}),"\n",(0,t.jsx)(i.h3,{id:"microchip-trustplatform-manifest",children:"Microchip TrustPlatform Manifest"}),"\n",(0,t.jsxs)(i.p,{children:["This is a file format defined by Microchip and provided to their customers following a purchase of select hardware security modules. Relevant documentation is available ",(0,t.jsx)(i.a,{href:"https://www.microchip.com/content/dam/mchp/documents/SCBU/ProductDocuments/SupportingCollateral/TrustPlatformManifestFileFormat_2019-09-26_A.pdf",children:"here"}),"."]})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>c,x:()=>d});var t=n(96540);const r={},s=t.createContext(r);function c(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);