"use strict";(self.webpackChunkparasola=self.webpackChunkparasola||[]).push([[1490],{3905:(e,n,r)=>{r.d(n,{Zo:()=>u,kt:()=>b});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=t.createContext({}),c=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},u=function(e){var n=c(e.components);return t.createElement(l.Provider,{value:n},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(r),p=a,b=d["".concat(l,".").concat(p)]||d[p]||f[p]||o;return r?t.createElement(b,i(i({ref:n},u),{},{components:r})):t.createElement(b,i({ref:n},u))}));function b(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},8029:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var t=r(7462),a=(r(7294),r(3905));const o={},i="Bundles",s={unversionedId:"reference/bundles",id:"reference/bundles",title:"Bundles",description:"Bundles are an immutable selection of artifact versions. You associate a bundle with a release to",source:"@site/docs/reference/bundles.md",sourceDirName:"reference",slug:"/reference/bundles",permalink:"/reference/bundles",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"reference",previous:{title:"Binaries",permalink:"/reference/binaries"},next:{title:"Cohorts",permalink:"/reference/cohorts"}},l={},c=[{value:"Hashes and Enforced Uniquenes",id:"hashes-and-enforced-uniquenes",level:2}],u={toc:c},d="wrapper";function f(e){let{components:n,...r}=e;return(0,a.kt)(d,(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"bundles"},"Bundles"),(0,a.kt)("p",null,"Bundles are an immutable selection of artifact versions. You associate a bundle with a release to\nspecify what the release should distribute to devices. Every release is associated with a single\nbundle, but a bundle can be associated with any number of releases."),(0,a.kt)("p",null,"Bundles make it possible to reliably and easily release the same set of artifact versions across\nmultiple cohorts, empowering common use cases like testing changes against a low risk cohort like\nengineers' devices, and then later promoting those exact changes to other higher risk cohorts like\nproduction devices."),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"/reference/cohorts#binary-resolution"},"binary resolution")," for more information regarding\nhow bundles are leveraged."),(0,a.kt)("h2",{id:"hashes-and-enforced-uniquenes"},"Hashes and Enforced Uniquenes"),(0,a.kt)("p",null,"A bundle's ",(0,a.kt)("inlineCode",{parentName:"p"},"artifact_version_ids")," field is an array of artifact version IDs. A bundle's\n",(0,a.kt)("inlineCode",{parentName:"p"},"hash")," is the SHA256 hash of the canonical JSON representation of that array. Bundles are enforced\nto be unique by hash, meaning it is impossible to create two different bundles with identical\n",(0,a.kt)("inlineCode",{parentName:"p"},"artifact_version_ids"),"."))}f.isMDXComponent=!0}}]);