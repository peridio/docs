"use strict";(self.webpackChunkparasola=self.webpackChunkparasola||[]).push([[4385],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var i=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,i,a=function(e,t){if(null==e)return{};var r,i,a={},n=Object.keys(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=i.createContext({}),c=function(e){var t=i.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},b=i.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(r),b=a,f=p["".concat(l,".").concat(b)]||p[b]||u[b]||n;return r?i.createElement(f,o(o({ref:t},d),{},{components:r})):i.createElement(f,o({ref:t},d))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,o=new Array(n);o[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<n;c++)o[c]=r[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,r)}b.displayName="MDXCreateElement"},565:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>n,metadata:()=>s,toc:()=>c});var i=r(7462),a=(r(7294),r(3905));const n={},o="Binaries",s={unversionedId:"reference/binaries",id:"reference/binaries",title:"Binaries",description:"A binary is an actual piece of data you wish to distribute to devices.",source:"@site/docs/reference/binaries.md",sourceDirName:"reference",slug:"/reference/binaries",permalink:"/reference/binaries",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"reference",previous:{title:"Artifact Versions",permalink:"/reference/artifact-versions"},next:{title:"Signing Keys",permalink:"/reference/firmware-signing-keys"}},l={},c=[{value:"Content Versus Record",id:"content-versus-record",level:2},{value:"Targets and Compatibility",id:"targets-and-compatibility",level:2},{value:"Destroyed Binaries",id:"destroyed-binaries",level:2},{value:"Impact on Releases",id:"impact-on-releases",level:3}],d={toc:c},p="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,i.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"binaries"},"Binaries"),(0,a.kt)("p",null,"A binary is an actual piece of data you wish to distribute to devices."),(0,a.kt)("h2",{id:"content-versus-record"},"Content Versus Record"),(0,a.kt)("p",null,"When referring to binaries there are two distinct concepts: a binary's content and a binary's record."),(0,a.kt)("p",null,"A binary's record is the meta information Peridio stores regarding a binary, e.g., its description, what artifact version it is associated with, its hash, etc. A binary's content is the literal data, e.g., a firmware image, a machine learning model, etc."),(0,a.kt)("p",null,"This distinction is important because a binary's content and record are stored independently from each other for a variety of reasons including the efficient distribution of content to devices and the efficient queryability of records. It is especially relevant to ",(0,a.kt)("a",{parentName:"p",href:"#destroyed-binaries"},"destroyed binaries"),"."),(0,a.kt)("h2",{id:"targets-and-compatibility"},"Targets and Compatibility"),(0,a.kt)("p",null,"Binaries indicate their compatibility via their ",(0,a.kt)("inlineCode",{parentName:"p"},"target")," field. The value of this field is expected to be either:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"A target triplet like ",(0,a.kt)("inlineCode",{parentName:"li"},"arm-linux-androidabi"),".",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The binary in this case is said to be target-specific."))),(0,a.kt)("li",{parentName:"ol"},"The reserved value ",(0,a.kt)("inlineCode",{parentName:"li"},"portable"),".",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The binary in this case is said to be portable.")))),(0,a.kt)("p",null,"Target-specific binaries are compatible with a device if their ",(0,a.kt)("inlineCode",{parentName:"p"},"target")," field matches the device's product's ",(0,a.kt)("inlineCode",{parentName:"p"},"target")," field."),(0,a.kt)("p",null,"Portable binaries are universally compatible with all devices."),(0,a.kt)("p",null,"Note in the case of ",(0,a.kt)("a",{parentName:"p",href:"/reference/cohorts#bianry-resolution"},"binary resolution"),", if both a compatible target-specific binary and a portable binary exist for an artifact version, the target-specific binary will be preferred."),(0,a.kt)("h2",{id:"destroyed-binaries"},"Destroyed Binaries"),(0,a.kt)("p",null,"Binaries with a state of signed can be destroyed. Destroying a binary deletes its content from Peridio but leaves its record mostly intact, see ",(0,a.kt)("a",{parentName:"p",href:"#content-versus-record"},"content versus record"),"."),(0,a.kt)("admonition",{type:"danger"},(0,a.kt)("p",{parentName:"admonition"},"Destroying a binary is an irreversible and destructive action."),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"The binary's record is updated such that ",(0,a.kt)("inlineCode",{parentName:"li"},"destroyed: true, bytes_uploaded: 0"),"."),(0,a.kt)("li",{parentName:"ul"},"The binary's content is irrecoverably deleted."),(0,a.kt)("li",{parentName:"ul"},"Devices' ability to update may be interupted, see ",(0,a.kt)("a",{parentName:"li",href:"#impact-on-releases"},"impact on releases"),"."))),(0,a.kt)("h3",{id:"impact-on-releases"},"Impact on Releases"),(0,a.kt)("p",null,"A release is affected by a destroyed binary if the release is associated with a bundle that is associated with an artifact version that is associated with a destroyed binary."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"During ",(0,a.kt)("a",{parentName:"p",href:"/reference/cohorts#update-resolution"},"update resolution"),", release resolution completes before binary resolution begins, but destroyed binaries are not valid candidates for binary resolution. This means that if release resolution resolves a release that then fails binary resolution, the requesting device will fail to resolve an update.")),(0,a.kt)("p",null,"For impacted releases, whether it causes a device to fail to resolve an update or not is dictated by:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The impacted release's ",(0,a.kt)("inlineCode",{parentName:"li"},"required")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"next_release_prn")," fields."),(0,a.kt)("li",{parentName:"ol"},"Whether the impacted artifact version has a resolveable portable binary associated with it or not. See ",(0,a.kt)("a",{parentName:"li",href:"#targets-and-compatibility"},"targets and compatibility"),".")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"To avoid disrupting update resolution, it is recommended to archive any release that would be impacted before destroying the binary. You can see a list of releases associated with a binary most conveniently by viewing the binary in the Peridio Web Console.")))}u.isMDXComponent=!0}}]);