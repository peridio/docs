"use strict";(self.webpackChunkparasola=self.webpackChunkparasola||[]).push([[4468],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var i=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=i.createContext({}),d=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=d(e.components);return i.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},k=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=d(n),k=l,f=u["".concat(p,".").concat(k)]||u[k]||c[k]||a;return n?i.createElement(f,r(r({ref:t},s),{},{components:n})):i.createElement(f,r({ref:t},s))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,r=new Array(a);r[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:l,r[1]=o;for(var d=2;d<a;d++)r[d]=n[d];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}k.displayName="MDXCreateElement"},7905:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var i=n(7462),l=(n(7294),n(3905));const a={title:"Getting started"},r="Peridio Command Line Interface Overview",o={unversionedId:"cli",id:"cli",title:"Getting started",description:"Peridio CLI, or peridio, is a command-line interface to Peridio for use in your terminal or your scripts.",source:"@site/docs/cli.md",sourceDirName:".",slug:"/cli",permalink:"/cli",draft:!1,tags:[],version:"current",frontMatter:{title:"Getting started"},sidebar:"cli",next:{title:"create",permalink:"/cli/artifact-versions/create"}},p={},d=[{value:"Installation",id:"installation",level:2},{value:"Upgrade",id:"upgrade",level:3},{value:"Precedence of Supplied Values",id:"precedence-of-supplied-values",level:2},{value:"Configuration Files",id:"configuration-files",level:2},{value:"config.json",id:"configjson",level:3},{value:"credentials.json",id:"credentialsjson",level:3},{value:"Global Options",id:"global-options",level:2},{value:"API Key",id:"api-key",level:3},{value:"Base URL",id:"base-url",level:3},{value:"CA Path",id:"ca-path",level:3},{value:"Config Directory",id:"config-directory",level:3},{value:"Organization Name",id:"organization-name",level:3},{value:"Profile",id:"profile",level:3},{value:"Versioning",id:"versioning",level:2},{value:"Stale Configs",id:"stale-configs",level:3},{value:"Unversioned Configs",id:"unversioned-configs",level:3}],s={toc:d},u="wrapper";function c(e){let{components:t,...n}=e;return(0,l.kt)(u,(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"peridio-command-line-interface-overview"},"Peridio Command Line Interface Overview"),(0,l.kt)("p",null,"Peridio CLI, or ",(0,l.kt)("inlineCode",{parentName:"p"},"peridio"),", is a command-line interface to Peridio for use in your terminal or your scripts."),(0,l.kt)("p",null,"It aims to have complete support for the ",(0,l.kt)("a",{parentName:"p",href:"/admin-api"},"Peridio Admin API"),"."),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"peridio")," is available as a downloadable binary from the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/peridio/morel/releases"},"releases page"),"."),(0,l.kt)("h3",{id:"upgrade"},"Upgrade"),(0,l.kt)("p",null,"The CLI can upgrade itself in place via ",(0,l.kt)("inlineCode",{parentName:"p"},"peridio upgrade"),"."),(0,l.kt)("h2",{id:"precedence-of-supplied-values"},"Precedence of Supplied Values"),(0,l.kt)("p",null,"Options can be supplied in up to three ways, from highest to lowest precedence:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"CLI arguments"),(0,l.kt)("li",{parentName:"ol"},"Environment variables"),(0,l.kt)("li",{parentName:"ol"},"Configuration files")),(0,l.kt)("h2",{id:"configuration-files"},"Configuration Files"),(0,l.kt)("p",null,"The Peridio CLI supports profile based configuration files as a means of supplying options that are relevant to many subcommands. A particular profile can be choosen explicitly via ",(0,l.kt)("a",{parentName:"p",href:"#profile"},"--profile"),". To use this functionality you must specify at least a ",(0,l.kt)("a",{parentName:"p",href:"#configjson"},"config.json")," file and optionally, if you wish to specify API keys via this method, a ",(0,l.kt)("a",{parentName:"p",href:"#credentialsjson"},"credentials.json")," in the same directory."),(0,l.kt)("p",null,"By default, the directory searched for these files is:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"OS"),(0,l.kt)("th",{parentName:"tr",align:null},"Default Config Directory"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Linux"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$HOME/.config/peridio"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Windows"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"{FOLDERID_RoamingAppData}/peridio/config"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"macOS"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$HOME/Library/Application\\ Support/peridio"))))),(0,l.kt)("p",null,"To override this directory, see ",(0,l.kt)("a",{parentName:"p",href:"#config-directory"},"--config-directory"),"."),(0,l.kt)("h3",{id:"configjson"},"config.json"),(0,l.kt)("p",null,"Contains a single object of the format:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Example"',title:'"Example"'},'{\n  "version": 1,\n  "profiles": {\n    "profile-name": {\n      "organization_name": "organization-name"\n    }\n  },\n  "signing_key_pairs": {\n    "signing-key-pair-name": {\n      "signing_key_prn": "prn:1:b8af964b-2736-423c-852b-a19d05e00d83:signing_key:15ba050a-82ee-4381-b461-d42181f9a81b",\n      "signing_key_private_path": "private.pem"\n    }\n  }\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Schema"',title:'"Schema"'},'{\n  "version": VERSION,\n  "profiles": {\n    PROFILE_NAME: {\n      "base_url": BASE_URL,\n      "ca_path": CA_PATH,\n      "organization_name": ORGANIZATION_NAME\n    }\n  },\n  "signing_key_pairs": {\n    SIGNING_KEY_PAIR_NAME: {\n      "signing_key_prn": SIGNING_KEY_PRN,\n      "signing_key_private_path": SIGNING_KEY_PRIVATE_PATH\n    }\n  }\n  ...\n}\n')),(0,l.kt)("table",null,(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",null,"Field"),(0,l.kt)("th",null,"Required"),(0,l.kt)("th",null,"Type"),(0,l.kt)("th",null,"Description"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,"VERSION"),(0,l.kt)("td",null,(0,l.kt)("code",null,"true")),(0,l.kt)("td",null,"integer"),(0,l.kt)("td",null,"Should be ",(0,l.kt)("code",null,"1"),". See ",(0,l.kt)("a",{href:"#versioning"},"versioning"),".")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"PROFILE_NAME"),(0,l.kt)("td",null,(0,l.kt)("code",null,"false")),(0,l.kt)("td",null,"string"),(0,l.kt)("td",null,"The name of a profile. Corresponds to an entry in ",(0,l.kt)("a",{href:"#credentialsjson"},"credentials.json"),". A particular profile can be choosen explicitly via ",(0,l.kt)("a",{href:"#profile"},"--profile"),".")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"BASE_URL"),(0,l.kt)("td",null,(0,l.kt)("code",null,"false")),(0,l.kt)("td",null,"string"),(0,l.kt)("td",null,"See ",(0,l.kt)("a",{href:"#base-url"},"--base-url"),".")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"CA_PATH"),(0,l.kt)("td",null,(0,l.kt)("code",null,"false")),(0,l.kt)("td",null,"string"),(0,l.kt)("td",null,"See ",(0,l.kt)("a",{href:"#ca-path"},"--ca-path"),".")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"ORGANIZATION_NAME"),(0,l.kt)("td",null,(0,l.kt)("code",null,"false")),(0,l.kt)("td",null,"string"),(0,l.kt)("td",null,"See ",(0,l.kt)("a",{href:"#organization-name"},"--organization-name"),".")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"SIGNING_KEY_PAIR_NAME"),(0,l.kt)("td",null,(0,l.kt)("code",null,"false")),(0,l.kt)("td",null,"string"),(0,l.kt)("td",null,"The name of a signing key pair. Some commands that make use of signing keys will let you reference this configuration by name.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"SIGNING_KEY_PRN"),(0,l.kt)("td",null,(0,l.kt)("code",null,"true")),(0,l.kt)("td",null,"string"),(0,l.kt)("td",null,"The PRN of the signing key that corresponds to the private key identified by the sibling ",(0,l.kt)("i",null,"SIGNING_KEY_PRIVATE_PATH")," field.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"SIGNING_KEY_PRIVATE_PATH"),(0,l.kt)("td",null,(0,l.kt)("code",null,"true")),(0,l.kt)("td",null,"string"),(0,l.kt)("td",null,"The path to a ",(0,l.kt)("a",{href:"/reference/signing-keys#pem"},"private key's PEM file"),".")))),(0,l.kt)("h3",{id:"credentialsjson"},"credentials.json"),(0,l.kt)("p",null,"Contains a single object of the format:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Example"',title:'"Example"'},'{\n  "my-first-profile": {\n    "api_key": "my-api-key"\n  }\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Schema"',title:'"Schema"'},'{\n  PROFILE_NAME: {\n    "api_key": API_KEY\n  },\n  ...\n}\n')),(0,l.kt)("table",null,(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",null,"Field"),(0,l.kt)("th",null,"Required"),(0,l.kt)("th",null,"Type"),(0,l.kt)("th",null,"Description"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,"PROFILE_NAME"),(0,l.kt)("td",null,(0,l.kt)("code",null,"false")),(0,l.kt)("td",null,"string"),(0,l.kt)("td",null,"The name of a profile. Must correspond to an entry in ",(0,l.kt)("a",{href:"#configjson"},"config.json"),". A particular profile can be choosen explicitly via ",(0,l.kt)("a",{href:"#profile"},"--profile"),".")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"API_KEY"),(0,l.kt)("td",null,(0,l.kt)("code",null,"false")),(0,l.kt)("td",null,"string"),(0,l.kt)("td",null,"See ",(0,l.kt)("a",{href:"#api-key"},"--api-key"),".")))),(0,l.kt)("h2",{id:"global-options"},"Global Options"),(0,l.kt)("p",null,"Global options are options that are relevant to many commands. They are supplied after ",(0,l.kt)("inlineCode",{parentName:"p"},"peridio")," but before a command, e.g., ",(0,l.kt)("inlineCode",{parentName:"p"},"peridio --profile foo products list"),"."),(0,l.kt)("h3",{id:"api-key"},"API Key"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"-a"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"--api-key <api-key>"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"$PERIDIO_API_KEY")),(0,l.kt)("p",null,"The API key used to authenticate and authorize requests against the Peridio Admin API."),(0,l.kt)("p",null,"Can be provided via configuration files."),(0,l.kt)("h3",{id:"base-url"},"Base URL"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"-b"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"--base-url <base-url>"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"$PERIDIO_BASE_URL")),(0,l.kt)("p",null,"Defaults to ",(0,l.kt)("inlineCode",{parentName:"p"},"https://api.cremini.peridio.com"),"."),(0,l.kt)("p",null,"The base URL of the Peridio Admin API."),(0,l.kt)("p",null,"Can be provided via configuration files."),(0,l.kt)("h3",{id:"ca-path"},"CA Path"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"-c"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"--ca-path <ca-path>"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"$PERIDIO_CA_PATH")),(0,l.kt)("p",null,"A path identifying a file containing PEM encoded CA certificates to additionally trust when making API requests."),(0,l.kt)("p",null,"Can be provided via configuration files."),(0,l.kt)("h3",{id:"config-directory"},"Config Directory"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"-d"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"--config-directory <config-directory>"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"$PERIDIO_CONFIG_DIRECTORY")),(0,l.kt)("p",null,"Defaults to ",(0,l.kt)("inlineCode",{parentName:"p"},"$HOME/Library/Application\\ Support/peridio")," on macOS."),(0,l.kt)("p",null,"A path identifying the directory the CLI should look within to find Peridio CLI configuration files."),(0,l.kt)("h3",{id:"organization-name"},"Organization Name"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"-o"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"--organization-name <organization-name>"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"$PERIDIO_ORGANIZATION_NAME")),(0,l.kt)("p",null,"If applicable, the case-sensitive name of the organization against which Peridio Admin API requests will be executed."),(0,l.kt)("p",null,"Can be provided via configuration files."),(0,l.kt)("h3",{id:"profile"},"Profile"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"-p"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"--profile <profile>"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"$PERIDIO_PROFILE")),(0,l.kt)("p",null,"Explicitly chooses a profile within a ",(0,l.kt)("a",{parentName:"p",href:"#configjson"},"config.json")," to use. See ",(0,l.kt)("a",{parentName:"p",href:"#configuration-files"},"configuration files"),"."),(0,l.kt)("h2",{id:"versioning"},"Versioning"),(0,l.kt)("p",null,"The current version of the CLI is ",(0,l.kt)("inlineCode",{parentName:"p"},"1"),"."),(0,l.kt)("h3",{id:"stale-configs"},"Stale Configs"),(0,l.kt)("p",null,"Starting with version ",(0,l.kt)("inlineCode",{parentName:"p"},"0.8.0"),", the CLI will halt and prompt you to upgrade your config if it is stale."),(0,l.kt)("h3",{id:"unversioned-configs"},"Unversioned Configs"),(0,l.kt)("p",null,'The very first iteration of a config file was unversioned, accordingly, that "version" is identified by a config file that does not have a ',(0,l.kt)("inlineCode",{parentName:"p"},"version")," key."))}c.isMDXComponent=!0}}]);