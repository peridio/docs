"use strict";(self.webpackChunkparasola=self.webpackChunkparasola||[]).push([[9312],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>b});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),l=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},s=function(e){var r=l(e.components);return n.createElement(p.Provider,{value:r},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=l(t),f=a,b=u["".concat(p,".").concat(f)]||u[f]||y[f]||i;return t?n.createElement(b,o(o({ref:r},s),{},{components:t})):n.createElement(b,o({ref:r},s))}));function b(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=f;var c={};for(var p in r)hasOwnProperty.call(r,p)&&(c[p]=r[p]);c.originalType=e,c[u]="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=t[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},7091:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>o,default:()=>y,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var n=t(7462),a=(t(7294),t(3905));const i={},o=void 0,c={unversionedId:"cli/binary-parts/create",id:"cli/binary-parts/create",title:"create",description:"",source:"@site/docs/cli/binary-parts/create.md",sourceDirName:"cli/binary-parts",slug:"/cli/binary-parts/create",permalink:"/cli/binary-parts/create",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"cli",previous:{title:"update",permalink:"/cli/binaries/update"},next:{title:"list",permalink:"/cli/binary-parts/list"}},p={},l=[],s={toc:l},u="wrapper";function y(e){let{components:r,...t}=e;return(0,a.kt)(u,(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Usage: peridio binary-parts create [OPTIONS] --binary-prn <BINARY_PRN> --hash <HASH> --index <INDEX> --size <SIZE>\n\nOptions:\n      --binary-prn <BINARY_PRN>                      \n      --expected-binary-size <EXPECTED_BINARY_SIZE>  \n      --hash <HASH>                                  \n      --index <INDEX>                                \n      --size <SIZE>                                  \n      --binary-content-path <BINARY_CONTENT_PATH>    \n  -h, --help                                         Print help\n\n")))}y.isMDXComponent=!0}}]);