"use strict";(self.webpackChunkparasola=self.webpackChunkparasola||[]).push([[8612],{60735:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var i=t(74848),r=t(28453);const a={},o=void 0,s={id:"cli/binary-signatures/create",title:"create",description:"",source:"@site/docs/cli/binary-signatures/create.md",sourceDirName:"cli/binary-signatures",slug:"/cli/binary-signatures/create",permalink:"/cli/binary-signatures/create",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"cli",previous:{title:"list",permalink:"/cli/binary-parts/list"},next:{title:"delete",permalink:"/cli/binary-signatures/delete"}},c={},u=[];function p(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Usage: peridio binary-signatures create [OPTIONS] --binary-prn <BINARY_PRN>\n\nOptions:\n  -b, --binary-prn <BINARY_PRN>\n          The PRN of the binary to create a binary signature for\n\n  -c, --binary-content-path <BINARY_CONTENT_PATH>\n          The path of the file to automatically create a signature for. If you instead want to compute and provide the signature yourself, use the --signature option\n\n  -g, --signature <SIGNATURE>\n          The signature of the binary content.\n          \n          The hex encoded Ed25519 signature of the SHA256 hash of the binary content. To avoid computing this yourself, you can use the --binary-content-path option.\n\n  -s, --signing-key-pair <SIGNING_KEY_PAIR>\n          The name of a signing key pair as defined in your Peridio CLI config.\n          \n          If you instead want to provide the private key and PRN of the signing key yourself, use the --signing-key-private and --signing-key-prn options.\n\n      --signing-key-private <SIGNING_KEY_PRIVATE>\n          The path of the file containing the private key to sign the binary with.\n          \n          If you instead want to provide the name of a signing key pair as defined in your Peridio CLI config, use the --signing-key-pair option.\n\n      --signing-key-prn <SIGNING_KEY_PRN>\n          The PRN of the signing key to tell Peridio to verify the signature with.\n          \n          If you instead want to provide the name of a signing key pair as defined in your Peridio CLI config, use the --signing-key-pair option.\n\n  -h, --help\n          Print help (see a summary with '-h')\n\n"})})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var i=t(96540);const r={},a=i.createContext(r);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);