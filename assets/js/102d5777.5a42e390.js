"use strict";(self.webpackChunkparasola=self.webpackChunkparasola||[]).push([[1583],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>g});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=n.createContext({}),l=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},p=function(e){var r=l(e.components);return n.createElement(s.Provider,{value:r},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},y=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),y=i,g=u["".concat(s,".").concat(y)]||u[y]||f[y]||a;return t?n.createElement(g,o(o({ref:r},p),{},{components:t})):n.createElement(g,o({ref:r},p))}));function g(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=y;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c[u]="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=t[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},5046:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>o,default:()=>f,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var n=t(7462),i=(t(7294),t(3905));const a={},o=void 0,c={unversionedId:"cli/binary-signatures/create",id:"cli/binary-signatures/create",title:"create",description:"",source:"@site/docs/cli/binary-signatures/create.md",sourceDirName:"cli/binary-signatures",slug:"/cli/binary-signatures/create",permalink:"/cli/binary-signatures/create",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"cli",previous:{title:"list",permalink:"/cli/binary-parts/list"},next:{title:"delete",permalink:"/cli/binary-signatures/delete"}},s={},l=[],p={toc:l},u="wrapper";function f(e){let{components:r,...t}=e;return(0,i.kt)(u,(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Usage: peridio binary-signatures create [OPTIONS] --binary-prn <BINARY_PRN>\n\nOptions:\n  -b, --binary-prn <BINARY_PRN>\n          The PRN of the binary this signature will be associated with.\n  -c, --binary-content-path <BINARY_CONTENT_PATH>\n          The path of the file to create a signature for.\n  -g, --signature <SIGNATURE>\n          The hex encoded signature of the SHA256 hash of the binary content.\n  -s, --signing-key-pair <SIGNING_KEY_PAIR>\n          The name of a signing key pair as defined in your Peridio CLI config.\n      --signing-key-private <SIGNING_KEY_PRIVATE>\n          The PEM base64-encoded PKCS #8 private key.\n      --signing-key-prn <SIGNING_KEY_PRN>\n          The PRN of the signing key to tell Peridio to verify the signature with.\n  -h, --help\n          Print help\n\n")))}f.isMDXComponent=!0}}]);