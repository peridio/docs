"use strict";(self.webpackChunkperidio_docs=self.webpackChunkperidio_docs||[]).push([[2995],{35804:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>a,toc:()=>o});var n=t(74848),r=t(28453);const c={},s="X.509",a={id:"platform/reference/x509",title:"X.509",description:"X.509 is an ITU standard defining the format of public key certificates.",source:"@site/docs/platform/reference/x509.md",sourceDirName:"platform/reference",slug:"/platform/reference/x509",permalink:"/platform/reference/x509",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"platform",previous:{title:"Verification codes",permalink:"/platform/reference/verification-codes"},next:{title:"Webhooks",permalink:"/platform/reference/webhooks"}},l={},o=[{value:"Private and public keys",id:"private-and-public-keys",level:2},{value:"Certificates",id:"certificates",level:2},{value:"Root",id:"root",level:3},{value:"Intermediate",id:"intermediate",level:3},{value:"End-entity",id:"end-entity",level:3},{value:"Security",id:"security",level:2}];function d(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"x509",children:"X.509"}),"\n",(0,n.jsx)(i.p,{children:"X.509 is an ITU standard defining the format of public key certificates."}),"\n",(0,n.jsxs)(i.p,{children:["Peridio leverages this standard when authenticating ",(0,n.jsx)(i.a,{href:"/platform/reference/device-certificates",children:"device certificates"})," via mutual TLS and ",(0,n.jsx)(i.a,{href:"/platform/reference/just-in-time-provisioning",children:"just-in-time provisioning"})," devices based on the signing ",(0,n.jsx)(i.a,{href:"/platform/reference/ca-certificates",children:"CA certificate"}),"."]}),"\n",(0,n.jsx)(i.h2,{id:"private-and-public-keys",children:"Private and public keys"}),"\n",(0,n.jsxs)(i.p,{children:["Every X.509 certificate has a public key within it. The public key is derived from a private key. When considered together they are referred to as an asymetric key pair. Generally, this field is refered to as ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Public-key_cryptography",children:"public-key cryptography"})," or asymmetric cryptography."]}),"\n",(0,n.jsx)(i.p,{children:"To create an asymmetric key pair, one must first decide on a public key algorithm to use, this choice dictates:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"The cryptographic properties of the keys and in turn their capabilities and security guarantees."}),"\n",(0,n.jsx)(i.li,{children:"The processes required to create and interact with the keys."}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["This guide will use the ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm",children:"ECDSA"})," public key algorithm, but RSA and DSA are other common choices."]}),"\n",(0,n.jsx)(i.p,{children:"Effective security requires keeping the private key private; the public key can be openly distributed without compromising security."}),"\n",(0,n.jsxs)(i.p,{children:["To inspect a private key with ",(0,n.jsx)(i.code,{children:"openssl"}),":"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-console",children:"openssl ecparam \\\n  -in key.pem \\\n  -text \\\n  -noout\n"})}),"\n",(0,n.jsx)(i.h2,{id:"certificates",children:"Certificates"}),"\n",(0,n.jsxs)(i.p,{children:["To inspect a certificate signing request with ",(0,n.jsx)(i.code,{children:"openssl"}),":"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-console",children:"openssl req \\\n  -in certificate-signing-request.pem \\\n  -text \\\n  -noout\n"})}),"\n",(0,n.jsxs)(i.p,{children:["To inspect a certificate with ",(0,n.jsx)(i.code,{children:"openssl"}),":"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-console",children:"openssl x509 \\\n  -in certificate.pem \\\n  -text \\\n  -noout\n"})}),"\n",(0,n.jsx)(i.h3,{id:"root",children:"Root"}),"\n",(0,n.jsx)(i.p,{children:"A root certificate authority is a certificate that:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"is self-signed"}),"\n",(0,n.jsx)(i.li,{children:"is capable of signing certificates"}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"intermediate",children:"Intermediate"}),"\n",(0,n.jsx)(i.p,{children:"An intermediate certificate authority is a certificate that:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"is not self signed"}),"\n",(0,n.jsx)(i.li,{children:"is signed either by an intermediate certificate authority or a root certificate authority"}),"\n",(0,n.jsx)(i.li,{children:"is capable of signing certificates"}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"end-entity",children:"End-entity"}),"\n",(0,n.jsx)(i.p,{children:"An end-entity certificate is a certificate that:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"is not self signed"}),"\n",(0,n.jsx)(i.li,{children:"is signed by either an intermediate certificate authority or a root certificate authority"}),"\n",(0,n.jsx)(i.li,{children:"is not capable of signing certificates"}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"security",children:"Security"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Require TLS to enforce encrypted communications."}),"\n",(0,n.jsx)(i.li,{children:"Provide HMAC-SHA256 request signatures."}),"\n",(0,n.jsx)(i.li,{children:"Provide published at data to prevent replay attacks."}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,i,t)=>{t.d(i,{R:()=>s,x:()=>a});var n=t(96540);const r={},c=n.createContext(r);function s(e){const i=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(c.Provider,{value:i},e.children)}}}]);