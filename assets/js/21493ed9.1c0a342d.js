"use strict";(self.webpackChunkperidio_docs=self.webpackChunkperidio_docs||[]).push([[1800],{10770:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>l});var o=n(74848),r=n(28453);const t={},c="peridiod",s={id:"integration/linux/peridiod",title:"peridiod",description:"peridiod is a reference implementation of a Peridio Agent for Embedded Linux. Peridio offers several ways to integrate peridiod into your build workflow via several integration paths:",source:"@site/docs/integration/linux/peridiod.md",sourceDirName:"integration/linux",slug:"/integration/linux/peridiod",permalink:"/integration/linux/peridiod",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"integration",previous:{title:"Overview",permalink:"/integration/linux/overview"},next:{title:"Yocto",permalink:"/integration/linux/build-tools/yocto"}},d={},l=[{value:"Configuring",id:"configuring",level:2},{value:"Example Configurations",id:"example-configurations",level:3},{value:"Common",id:"common",level:4},{value:"Node Configurations",id:"node-configurations",level:4},{value:"Packaging Updates",id:"packaging-updates",level:3}];function a(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.h1,{id:"peridiod",children:"peridiod"}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"peridiod"})," is a reference implementation of a Peridio Agent for Embedded Linux. Peridio offers several ways to integrate peridiod into your build workflow via several integration paths:"]}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsx)(i.li,{children:(0,o.jsx)(i.a,{href:"build-tools/yocto",children:"yocto"})}),"\n",(0,o.jsx)(i.li,{children:(0,o.jsx)(i.a,{href:"build-tools/buildroot",children:"buildroot"})}),"\n"]}),"\n",(0,o.jsx)(i.h2,{id:"configuring",children:"Configuring"}),"\n",(0,o.jsxs)(i.p,{children:["Peridiod is configured via a json formatted file on the filesystem. The location of the file defaults to ",(0,o.jsx)(i.code,{children:"$XDG_CONFIG_HOME/peridio/peridio-config.json"}),". if ",(0,o.jsx)(i.code,{children:"$XDG_CONFIG_HOME"})," is not set the default path is ",(0,o.jsx)(i.code,{children:"$HOME/.config/peridio/peridio-config.json"}),". This file location can be overwritten by setting ",(0,o.jsx)(i.code,{children:"PERIDIO_CONFIG_FILE=/path/to/peridio.json"}),". The peridiod configuration has the following top level keys:"]}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"version"}),": The configuration version number. Currently this is 1."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"device_api"}),": Configuration for the device api endpoint","\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"certificate_path"}),": Path to the device api ca certificate."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"url"}),": The peridio server device api URL."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"verify"}),": Enable client side ssl verification for device api connections."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(i.li,{children:["fwup: Keys related to the use of fwup for the last mile.","\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"devpath"}),": The block storage device path to use for applying firmware updates."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"public_keys"}),": A list of authorized public keys used when verifying update archives."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"remote_shell"}),": Enable or disable the remote console feature."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"node"}),": Node configuration settings","\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:["\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"key_pair_source"}),": Options are ",(0,o.jsx)(i.code,{children:"file"}),", ",(0,o.jsx)(i.code,{children:"uboot-env"}),", ",(0,o.jsx)(i.code,{children:"pkcs11"}),". This determines the source of the identity key information."]}),"\n"]}),"\n",(0,o.jsxs)(i.li,{children:["\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"key_pair_config"}),": Different depending on the ",(0,o.jsx)(i.code,{children:"key_pair_source"})]}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"key_pair_source: file"}),":"]}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"private_key_path"}),": Path on the filesystem to a PEM encoded private key file."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"certificate_path"}),": Path on the filesystem to a PEM encoded x509 certificate file."]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"key_pair_source: uboot-env"}),":"]}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"private_key"}),": The key in the uboot environment which contains a PEM encoded private key."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"certificate"}),": The key in the uboot environment which contains a PEM encoded x509 certificate."]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"key_pair_source: pkcs11"}),":"]}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"key_id"}),": The ",(0,o.jsx)(i.code,{children:"PKCS11"})," URI used to for private key operations.\nExamples:\nATECCx08 TNG using CryptoAuthLib: ",(0,o.jsx)(i.code,{children:"pkcs11:token=MCHP;object=device;type=private"})]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"cert_id"}),": The ",(0,o.jsx)(i.code,{children:"PKCS11"})," URI used for certificate operations.\nExamples:\nATECCx08 TNG using CryptoAuthLib: ",(0,o.jsx)(i.code,{children:"pkcs11:token=MCHP;object=device;type=cert"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:["For more information about X509 certificates, see ",(0,o.jsx)(i.a,{href:"/platform/guides/creating-x509-certificates-with-openssl",children:"creating CA certificates"}),"."]}),"\n",(0,o.jsx)(i.h3,{id:"example-configurations",children:"Example Configurations"}),"\n",(0,o.jsx)(i.h4,{id:"common",children:"Common"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-json",children:'{\n  "version": 1,\n  "device_api": {\n    "certificate_path": "/etc/peridiod/peridio-cert.pem",\n    "url": "device.cremini.peridio.com",\n    "verify": true\n  },\n  "fwup": {\n    "devpath": "/dev/mmcblk1",\n    "public_keys": ["I93H7n/jHkfNqWik9uZf82Vi/HJuZ24EQBJnAtj9svU="]\n  },\n  "remote_shell": true,\n  "node": {\n    // ... see Node Configuration\n  }\n}\n'})}),"\n",(0,o.jsx)(i.h4,{id:"node-configurations",children:"Node Configurations"}),"\n",(0,o.jsx)(i.p,{children:"Filesystem"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-json",children:'"key_pair_source": "file",\n"key_pair_config": {\n  "private_key_path": "/etc/peridiod/device-key.pem",\n  "certificate_path": "/etc/peridiod/device.pem"\n}\n'})}),"\n",(0,o.jsx)(i.p,{children:"U-Boot Environment"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-json",children:'"key_pair_source": "uboot-env",\n"key_pair_config": {\n  "private_key": "peridio_identity_private_key",\n  "certificate": "peridio_identity_certificate"\n}\n'})}),"\n",(0,o.jsx)(i.p,{children:"PKCS11 Identity using ATECC608B TrustAndGo"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-json",children:'"key_pair_source": "pkcs11",\n"key_pair_config": {\n  "key_id": "pkcs11:token=MCHP;object=device;type=private",\n  "cert_id": "pkcs11:token=MCHP;object=device;type=cert"\n}\n'})}),"\n",(0,o.jsx)(i.h3,{id:"packaging-updates",children:"Packaging Updates"}),"\n",(0,o.jsxs)(i.p,{children:["peridiod currently supports updates packaged using. When an update is applied, the fwup upgrade instructions will be executed for the current system. These instructions can perform a variety of functions such as, manage partitions, write raw filesystems, update U-Boot environment variables and files, etc. More information about fwup functionality can be found on the ",(0,o.jsx)(i.a,{href:"https://github.com/fwup-home/fwup",children:"fwup README"}),"."]}),"\n",(0,o.jsxs)(i.p,{children:["An example fwup configuration for the QEmu target can be found in the ",(0,o.jsx)(i.code,{children:"meta-avocado-arm"})," ",(0,o.jsx)(i.a,{href:"https://github.com/peridio/meta-avocado/blob/main/meta-avocado-arm/conf/peridio/qemu.fwup.conf",children:"reference layer"}),"."]})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>c,x:()=>s});var o=n(96540);const r={},t=o.createContext(r);function c(e){const i=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(t.Provider,{value:i},e.children)}}}]);