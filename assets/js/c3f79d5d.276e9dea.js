"use strict";(self.webpackChunkparasola=self.webpackChunkparasola||[]).push([[6564],{94663:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var n=i(74848),t=i(28453);const a={},s="Creating Firmware",c={id:"platform/guides/creating-firmware",title:"Creating Firmware",description:"This guide describes how to create firmware.",source:"@site/docs/platform/guides/creating-firmware.md",sourceDirName:"platform/guides",slug:"/platform/guides/creating-firmware",permalink:"/platform/guides/creating-firmware",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"platform",previous:{title:"Creating Binary Signatures",permalink:"/platform/guides/creating-binary-signatures"},next:{title:"Creating Signing Keys",permalink:"/platform/guides/creating-signing-keys"}},o={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"fwup Archive Creation",id:"fwup-archive-creation",level:2},{value:"Create a Dummy Asset",id:"create-a-dummy-asset",level:3},{value:"Create a fwup conf",id:"create-a-fwup-conf",level:3},{value:"Create a fwup Archive",id:"create-a-fwup-archive",level:3},{value:"Sign the fwup Archive",id:"sign-the-fwup-archive",level:3},{value:"Verify the fwup Archive is Signed",id:"verify-the-fwup-archive-is-signed",level:3},{value:"Submission to Peridio",id:"submission-to-peridio",level:2},{value:"Web Console",id:"web-console",level:3},{value:"CLI",id:"cli",level:3},{value:"API",id:"api",level:3}];function l(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"creating-firmware",children:"Creating Firmware"}),"\n",(0,n.jsx)(r.p,{children:"This guide describes how to create firmware."}),"\n",(0,n.jsxs)(r.p,{children:["To learn more about Peridio firmware in general, see the ",(0,n.jsx)(r.a,{href:"/platform/reference/firmware",children:"firmware"})," reference."]}),"\n",(0,n.jsx)(r.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.a,{href:"https://github.com/fwup-home/fwup",children:"fwup CLI"}),".","\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Last tested with version 1.9.1."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.a,{href:"https://github.com/peridio/morel/releases",children:"Peridio CLI"}),".","\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Last tested with version 0.8.0."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["In order to create a firmware it must be associated with a preexisting product. To learn how to create a product, see the ",(0,n.jsx)(r.a,{href:"/platform/guides/creating-products",children:"creating products"})," guide."]}),"\n",(0,n.jsx)(r.h2,{id:"fwup-archive-creation",children:"fwup Archive Creation"}),"\n",(0,n.jsx)(r.h3,{id:"create-a-dummy-asset",children:"Create a Dummy Asset"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:'echo "russet" > tuber.txt\n'})}),"\n",(0,n.jsx)(r.h3,{id:"create-a-fwup-conf",children:"Create a fwup conf"}),"\n",(0,n.jsxs)(r.p,{children:["Create ",(0,n.jsx)(r.code,{children:"fwup.conf"})," containing:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:'meta-architecture = "arm"\nmeta-misc = "{\\"foo\\":\\"bar\\",\\"baz\\":12}"\nmeta-platform = "Jetson Nano"\nmeta-product = "Smart Potato"\nmeta-vcs-identifier = "23758867219c8d84c8363316e6dd2f9fd7ae3049"\nmeta-version = "1.0.0"\n\nfile-resource tuber.txt {\n  host-path = "tuber.txt"\n}\n'})}),"\n",(0,n.jsx)(r.h3,{id:"create-a-fwup-archive",children:"Create a fwup Archive"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-text",children:"fwup \\\n  -c \\\n  -f fwup.conf \\\n  -o demo.fw\n"})}),"\n",(0,n.jsx)(r.h3,{id:"sign-the-fwup-archive",children:"Sign the fwup Archive"}),"\n",(0,n.jsxs)(r.p,{children:["See ",(0,n.jsx)(r.a,{href:"/platform/reference/signing-keys",children:"signing keys"}),"."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-text",children:"fwup \\\n  -S \\\n  -s fwup-key.priv \\\n  -i demo.fw \\\n  -o signed-demo.fw\n"})}),"\n",(0,n.jsx)(r.h3,{id:"verify-the-fwup-archive-is-signed",children:"Verify the fwup Archive is Signed"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-text",children:"fwup \\\n  -m \\\n  -p fwup-key.pub \\\n  -i signed-demo.fw\n"})}),"\n",(0,n.jsx)(r.p,{children:"A failure would print an error like:"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsx)(r.p,{children:"fwup: Firmware archive's meta.conf fails digital signature verification."}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"submission-to-peridio",children:"Submission to Peridio"}),"\n",(0,n.jsx)(r.h3,{id:"web-console",children:"Web Console"}),"\n",(0,n.jsxs)(r.p,{children:["See the ",(0,n.jsx)(r.a,{href:"https://console.peridio.com",children:"Peridio Web Console"}),"."]}),"\n",(0,n.jsx)(r.h3,{id:"cli",children:"CLI"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:'peridio firmwares create \\\n  --firmware-path signed-demo.fw \\\n  --product-name "Smart Potato"\n'})}),"\n",(0,n.jsx)(r.h3,{id:"api",children:"API"}),"\n",(0,n.jsxs)(r.p,{children:["Use the Peridio Admin API ",(0,n.jsx)(r.a,{href:"/admin-api#firmware/operation/create-a-firmware",children:"create a firmware"})," endpoint."]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,r,i)=>{i.d(r,{R:()=>s,x:()=>c});var n=i(96540);const t={},a=n.createContext(t);function s(e){const r=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);