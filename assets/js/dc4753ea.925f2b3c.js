"use strict";(self.webpackChunkperidio_docs=self.webpackChunkperidio_docs||[]).push([[3553],{70624:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var s=t(74848),r=t(28453);const o={},i="Introduction to remote access",c={id:"platform/guides/introduction-to-remote-access",title:"Introduction to remote access",description:"This guide serves as a comprehensive introduction to remote access that will cover tunnels and their asynchronous nature.",source:"@site/docs/platform/guides/introduction-to-remote-access.md",sourceDirName:"platform/guides",slug:"/platform/guides/introduction-to-remote-access",permalink:"/platform/guides/introduction-to-remote-access",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"platform",previous:{title:"Creating releases",permalink:"/platform/guides/creating-releases"},next:{title:"Creating tunnels",permalink:"/platform/guides/creating-tunnels"}},l={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Remote access resources",id:"remote-access-resources",level:2},{value:"Getting started",id:"getting-started",level:2},{value:"Creating a tunnel",id:"creating-a-tunnel",level:3},{value:"Checking to see if a tunnel is <code>open</code>",id:"checking-to-see-if-a-tunnel-is-open",level:3},{value:"Connecting to a tunnel via SSH",id:"connecting-to-a-tunnel-via-ssh",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"introduction-to-remote-access",children:"Introduction to remote access"}),"\n",(0,s.jsxs)(n.p,{children:["This guide serves as a comprehensive introduction to remote access that will cover tunnels and their ",(0,s.jsx)(n.strong,{children:"asynchronous"})," nature."]}),"\n",(0,s.jsxs)(n.p,{children:["To learn more about Peridio tunnels in general, see the ",(0,s.jsx)(n.a,{href:"/platform/reference/tunnels",children:"tunnels"})," reference."]}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/peridio/morel/releases",children:"Peridio CLI"}),".","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Last tested with version 0.22.1."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"remote-access-resources",children:"Remote access resources"}),"\n",(0,s.jsx)(n.p,{children:"Remote access comprises the following resources:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/platform/reference/tunnels",children:"Tunnels"})," - used to securely connect users to devices"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"getting-started",children:"Getting started"}),"\n",(0,s.jsx)(n.p,{children:"The goal of this guide is to create a tunnel for a device."}),"\n",(0,s.jsx)(n.h3,{id:"creating-a-tunnel",children:"Creating a tunnel"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"creating-tunnels",children:"Create a tunnel"})," so that we can connect to devices."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"peridio tunnels create \\\n  --device-prn $PERIDIO_DEVICE_PRN \\\n  --device-tunnel-port 22\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"checking-to-see-if-a-tunnel-is-open",children:["Checking to see if a tunnel is ",(0,s.jsx)(n.code,{children:"open"})]}),"\n",(0,s.jsxs)(n.p,{children:["Because the create tunnel call is asynchronous, we need to check to see if the tunnel is ready for us to use. We would recommend waiting 2-3 seconds after create to make the first attempt. Then subsequent requests should backoff incrementally up to a total elapsed time of 30 seconds to reduce network strain. For example, our CLI uses the formula ",(0,s.jsx)(n.code,{children:"(x + 2) ^ 2"}),". That means our second attempt is 4 seconds after the first, and the third attempt is 9 seconds after the second."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"peridio tunnels get \\\n  --prn $PERIDIO_TUNNEL_PRN\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Then look for the ",(0,s.jsx)(n.code,{children:"state"})," key in the response:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  ...\n  "state": "open",\n  ...\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"connecting-to-a-tunnel-via-ssh",children:"Connecting to a tunnel via SSH"}),"\n",(0,s.jsxs)(n.p,{children:["When the tunnel is ",(0,s.jsx)(n.code,{children:"open"}),", then you can use the keys ",(0,s.jsx)(n.code,{children:"server_tunnel_ip_address"})," and ",(0,s.jsx)(n.code,{children:"server_tunnel_port"})," from the response to connect in the form of ",(0,s.jsx)(n.code,{children:"ssh [user]@[server_tunnel_ip_address] -p [server_tunnel_port]"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  ...\n  "server_tunnel_ip_address": "3.82.23.99",\n  "server_tunnel_port": 47532,\n  ...\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Assuming the device allows the user ",(0,s.jsx)(n.code,{children:"user"})," to ssh in:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"ssh user@3.82.23.99 -p 47532\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var s=t(96540);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);