"use strict";(self.webpackChunkperidio_docs=self.webpackChunkperidio_docs||[]).push([[9114],{93232:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>o});var r=n(74848),s=n(28453);const d={title:"Getting started"},l="Peridio Command Line Interface Overview",t={id:"cli",title:"Getting started",description:"Peridio CLI, or peridio, is a command-line interface to Peridio for use in your terminal or your scripts.",source:"@site/docs/cli.md",sourceDirName:".",slug:"/cli",permalink:"/cli",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Getting started"},sidebar:"cli",next:{title:"create",permalink:"/cli/artifact-versions/create"}},c={},o=[{value:"Installation",id:"installation",level:2},{value:"Upgrade",id:"upgrade",level:3},{value:"Precedence of Supplied Values",id:"precedence-of-supplied-values",level:2},{value:"Configuration Files",id:"configuration-files",level:2},{value:"config.json",id:"configjson",level:3},{value:"credentials.json",id:"credentialsjson",level:3},{value:"Global Options",id:"global-options",level:2},{value:"API Key",id:"api-key",level:3},{value:"Base URL",id:"base-url",level:3},{value:"CA Path",id:"ca-path",level:3},{value:"Config Directory",id:"config-directory",level:3},{value:"Organization Name",id:"organization-name",level:3},{value:"Profile",id:"profile",level:3},{value:"Versioning",id:"versioning",level:2},{value:"Stale Configs",id:"stale-configs",level:3},{value:"Unversioned Configs",id:"unversioned-configs",level:3}];function a(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h1,{id:"peridio-command-line-interface-overview",children:"Peridio Command Line Interface Overview"}),"\n",(0,r.jsxs)(i.p,{children:["Peridio CLI, or ",(0,r.jsx)(i.code,{children:"peridio"}),", is a command-line interface to Peridio for use in your terminal or your scripts."]}),"\n",(0,r.jsxs)(i.p,{children:["It aims to have complete support for the ",(0,r.jsx)(i.a,{href:"/admin-api",children:"Peridio Admin API"}),"."]}),"\n",(0,r.jsx)(i.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"peridio"})," is available as a downloadable binary from the ",(0,r.jsx)(i.a,{href:"https://github.com/peridio/morel/releases",children:"releases page"}),"."]}),"\n",(0,r.jsx)(i.h3,{id:"upgrade",children:"Upgrade"}),"\n",(0,r.jsxs)(i.p,{children:["The CLI can upgrade itself in place via ",(0,r.jsx)(i.code,{children:"peridio upgrade"}),"."]}),"\n",(0,r.jsx)(i.h2,{id:"precedence-of-supplied-values",children:"Precedence of Supplied Values"}),"\n",(0,r.jsx)(i.p,{children:"Options can be supplied in up to three ways, from highest to lowest precedence:"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsx)(i.li,{children:"CLI arguments"}),"\n",(0,r.jsx)(i.li,{children:"Environment variables"}),"\n",(0,r.jsx)(i.li,{children:"Configuration files"}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"configuration-files",children:"Configuration Files"}),"\n",(0,r.jsxs)(i.p,{children:["The Peridio CLI supports profile based configuration files as a means of supplying options that are relevant to many subcommands. A particular profile can be choosen explicitly via ",(0,r.jsx)(i.a,{href:"#profile",children:"--profile"}),". To use this functionality you must specify at least a ",(0,r.jsx)(i.a,{href:"#configjson",children:"config.json"})," file and optionally, if you wish to specify API keys via this method, a ",(0,r.jsx)(i.a,{href:"#credentialsjson",children:"credentials.json"})," in the same directory."]}),"\n",(0,r.jsx)(i.p,{children:"By default, the directory searched for these files is:"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"OS"}),(0,r.jsx)(i.th,{children:"Default Config Directory"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Linux"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"$HOME/.config/peridio"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Windows"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"{FOLDERID_RoamingAppData}/peridio/config"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"macOS"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"$HOME/Library/Application\\ Support/peridio"})})]})]})]}),"\n",(0,r.jsxs)(i.p,{children:["To override this directory, see ",(0,r.jsx)(i.a,{href:"#config-directory",children:"--config-directory"}),"."]}),"\n",(0,r.jsx)(i.h3,{id:"configjson",children:"config.json"}),"\n",(0,r.jsx)(i.p,{children:"Contains a single object of the format:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-json",metastring:'title="Example"',children:'{\n  "version": 1,\n  "profiles": {\n    "profile-name": {\n      "organization_name": "organization-name"\n    }\n  },\n  "signing_key_pairs": {\n    "signing-key-pair-name": {\n      "signing_key_prn": "prn:1:b8af964b-2736-423c-852b-a19d05e00d83:signing_key:15ba050a-82ee-4381-b461-d42181f9a81b",\n      "signing_key_private_path": "private.pem"\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-json",metastring:'title="Schema"',children:'{\n  "version": VERSION,\n  "profiles": {\n    PROFILE_NAME: {\n      "base_url": BASE_URL,\n      "ca_path": CA_PATH,\n      "organization_name": ORGANIZATION_NAME\n    }\n  },\n  "signing_key_pairs": {\n    SIGNING_KEY_PAIR_NAME: {\n      "signing_key_prn": SIGNING_KEY_PRN,\n      "signing_key_private_path": SIGNING_KEY_PRIVATE_PATH\n    }\n  }\n  ...\n}\n'})}),"\n",(0,r.jsxs)("table",{children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:"Field"}),(0,r.jsx)("th",{children:"Required"}),(0,r.jsx)("th",{children:"Type"}),(0,r.jsx)("th",{children:"Description"})]})}),(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"VERSION"}),(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"true"})}),(0,r.jsx)("td",{children:"integer"}),(0,r.jsx)("td",{children:(0,r.jsxs)(i.p,{children:["Should be ",(0,r.jsx)("code",{children:"1"}),". See ",(0,r.jsx)("a",{href:"#versioning",children:"versioning"}),"."]})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"PROFILE_NAME"}),(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"false"})}),(0,r.jsx)("td",{children:"string"}),(0,r.jsxs)("td",{children:["The name of a profile. Corresponds to an entry in ",(0,r.jsx)("a",{href:"#credentialsjson",children:"credentials.json"}),". A particular profile can be choosen explicitly via ",(0,r.jsx)("a",{href:"#profile",children:"--profile"}),"."]})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"BASE_URL"}),(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"false"})}),(0,r.jsx)("td",{children:"string"}),(0,r.jsxs)("td",{children:["See ",(0,r.jsx)("a",{href:"#base-url",children:"--base-url"}),"."]})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"CA_PATH"}),(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"false"})}),(0,r.jsx)("td",{children:"string"}),(0,r.jsxs)("td",{children:["See ",(0,r.jsx)("a",{href:"#ca-path",children:"--ca-path"}),"."]})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"ORGANIZATION_NAME"}),(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"false"})}),(0,r.jsx)("td",{children:"string"}),(0,r.jsxs)("td",{children:["See ",(0,r.jsx)("a",{href:"#organization-name",children:"--organization-name"}),"."]})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"SIGNING_KEY_PAIR_NAME"}),(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"false"})}),(0,r.jsx)("td",{children:"string"}),(0,r.jsx)("td",{children:"The name of a signing key pair. Some commands that make use of signing keys will let you reference this configuration by name."})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"SIGNING_KEY_PRN"}),(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"true"})}),(0,r.jsx)("td",{children:"string"}),(0,r.jsxs)("td",{children:["The PRN of the signing key that corresponds to the private key identified by the sibling ",(0,r.jsx)("i",{children:"SIGNING_KEY_PRIVATE_PATH"})," field."]})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"SIGNING_KEY_PRIVATE_PATH"}),(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"true"})}),(0,r.jsx)("td",{children:"string"}),(0,r.jsxs)("td",{children:["The path to a ",(0,r.jsx)("a",{href:"/reference/signing-keys#pem",children:"private key's PEM file"}),"."]})]})]})]}),"\n",(0,r.jsx)(i.h3,{id:"credentialsjson",children:"credentials.json"}),"\n",(0,r.jsx)(i.p,{children:"Contains a single object of the format:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-json",metastring:'title="Example"',children:'{\n  "my-first-profile": {\n    "api_key": "my-api-key"\n  }\n}\n'})}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-json",metastring:'title="Schema"',children:'{\n  PROFILE_NAME: {\n    "api_key": API_KEY\n  },\n  ...\n}\n'})}),"\n",(0,r.jsxs)("table",{children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:"Field"}),(0,r.jsx)("th",{children:"Required"}),(0,r.jsx)("th",{children:"Type"}),(0,r.jsx)("th",{children:"Description"})]})}),(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"PROFILE_NAME"}),(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"false"})}),(0,r.jsx)("td",{children:"string"}),(0,r.jsxs)("td",{children:["The name of a profile. Must correspond to an entry in ",(0,r.jsx)("a",{href:"#configjson",children:"config.json"}),". A particular profile can be choosen explicitly via ",(0,r.jsx)("a",{href:"#profile",children:"--profile"}),"."]})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"API_KEY"}),(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"false"})}),(0,r.jsx)("td",{children:"string"}),(0,r.jsxs)("td",{children:["See ",(0,r.jsx)("a",{href:"#api-key",children:"--api-key"}),"."]})]})]})]}),"\n",(0,r.jsx)(i.h2,{id:"global-options",children:"Global Options"}),"\n",(0,r.jsxs)(i.p,{children:["Global options are options that are relevant to many commands. They are supplied after ",(0,r.jsx)(i.code,{children:"peridio"})," but before a command, e.g., ",(0,r.jsx)(i.code,{children:"peridio --profile foo products list"}),"."]}),"\n",(0,r.jsx)(i.h3,{id:"api-key",children:"API Key"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"-a"}),", ",(0,r.jsx)(i.code,{children:"--api-key <api-key>"}),", ",(0,r.jsx)(i.code,{children:"$PERIDIO_API_KEY"})]}),"\n",(0,r.jsx)(i.p,{children:"The API key used to authenticate and authorize requests against the Peridio Admin API."}),"\n",(0,r.jsx)(i.p,{children:"Can be provided via configuration files."}),"\n",(0,r.jsx)(i.h3,{id:"base-url",children:"Base URL"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"-b"}),", ",(0,r.jsx)(i.code,{children:"--base-url <base-url>"}),", ",(0,r.jsx)(i.code,{children:"$PERIDIO_BASE_URL"})]}),"\n",(0,r.jsxs)(i.p,{children:["Defaults to ",(0,r.jsx)(i.code,{children:"https://api.cremini.peridio.com"}),"."]}),"\n",(0,r.jsx)(i.p,{children:"The base URL of the Peridio Admin API."}),"\n",(0,r.jsx)(i.p,{children:"Can be provided via configuration files."}),"\n",(0,r.jsx)(i.h3,{id:"ca-path",children:"CA Path"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"-c"}),", ",(0,r.jsx)(i.code,{children:"--ca-path <ca-path>"}),", ",(0,r.jsx)(i.code,{children:"$PERIDIO_CA_PATH"})]}),"\n",(0,r.jsx)(i.p,{children:"A path identifying a file containing PEM encoded CA certificates to additionally trust when making API requests."}),"\n",(0,r.jsx)(i.p,{children:"Can be provided via configuration files."}),"\n",(0,r.jsx)(i.h3,{id:"config-directory",children:"Config Directory"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"-d"}),", ",(0,r.jsx)(i.code,{children:"--config-directory <config-directory>"}),", ",(0,r.jsx)(i.code,{children:"$PERIDIO_CONFIG_DIRECTORY"})]}),"\n",(0,r.jsxs)(i.p,{children:["Defaults to ",(0,r.jsx)(i.code,{children:"$HOME/Library/Application\\ Support/peridio"})," on macOS."]}),"\n",(0,r.jsx)(i.p,{children:"A path identifying the directory the CLI should look within to find Peridio CLI configuration files."}),"\n",(0,r.jsx)(i.h3,{id:"organization-name",children:"Organization Name"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"-o"}),", ",(0,r.jsx)(i.code,{children:"--organization-name <organization-name>"}),", ",(0,r.jsx)(i.code,{children:"$PERIDIO_ORGANIZATION_NAME"})]}),"\n",(0,r.jsx)(i.p,{children:"If applicable, the case-sensitive name of the organization against which Peridio Admin API requests will be executed."}),"\n",(0,r.jsx)(i.p,{children:"Can be provided via configuration files."}),"\n",(0,r.jsx)(i.h3,{id:"profile",children:"Profile"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"-p"}),", ",(0,r.jsx)(i.code,{children:"--profile <profile>"}),", ",(0,r.jsx)(i.code,{children:"$PERIDIO_PROFILE"})]}),"\n",(0,r.jsxs)(i.p,{children:["Explicitly chooses a profile within a ",(0,r.jsx)(i.a,{href:"#configjson",children:"config.json"})," to use. See ",(0,r.jsx)(i.a,{href:"#configuration-files",children:"configuration files"}),"."]}),"\n",(0,r.jsx)(i.h2,{id:"versioning",children:"Versioning"}),"\n",(0,r.jsxs)(i.p,{children:["The current version of the CLI is ",(0,r.jsx)(i.code,{children:"1"}),"."]}),"\n",(0,r.jsx)(i.h3,{id:"stale-configs",children:"Stale Configs"}),"\n",(0,r.jsxs)(i.p,{children:["Starting with version ",(0,r.jsx)(i.code,{children:"0.8.0"}),", the CLI will halt and prompt you to upgrade your config if it is stale."]}),"\n",(0,r.jsx)(i.h3,{id:"unversioned-configs",children:"Unversioned Configs"}),"\n",(0,r.jsxs)(i.p,{children:['The very first iteration of a config file was unversioned, accordingly, that "version" is identified by a config file that does not have a ',(0,r.jsx)(i.code,{children:"version"})," key."]})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>t});var r=n(96540);const s={},d=r.createContext(s);function l(e){const i=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function t(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(d.Provider,{value:i},e.children)}}}]);