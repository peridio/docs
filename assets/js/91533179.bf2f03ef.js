"use strict";(self.webpackChunkperidio_docs=self.webpackChunkperidio_docs||[]).push([[3121],{69820:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>d,metadata:()=>l,toc:()=>s});var t=n(74848),i=n(28453);const d={},o="Bundle overrides",l={id:"platform/reference/bundle-overrides",title:"Bundle overrides",description:"Bundle overrides allow you to force a device to be served a bundle of your choosing, taking precedence over any release that otherwise would have been relevant for the duration of the override.",source:"@site/docs/platform/reference/bundle-overrides.md",sourceDirName:"platform/reference",slug:"/platform/reference/bundle-overrides",permalink:"/platform/reference/bundle-overrides",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"platform",previous:{title:"Release channels",permalink:"/platform/reference/release-channels"},next:{title:"Bundle distribution",permalink:"/platform/reference/bundle-distribution"}},a={},s=[{value:"Scheduling",id:"scheduling",level:2},{value:"Stacking",id:"stacking",level:3},{value:"Mutability",id:"mutability",level:2},{value:"Distribution",id:"distribution",level:2}];function c(e){const r={a:"a",h1:"h1",h2:"h2",h3:"h3",p:"p",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"bundle-overrides",children:"Bundle overrides"}),"\n",(0,t.jsxs)(r.p,{children:["Bundle overrides allow you to force a ",(0,t.jsx)(r.a,{href:"/platform/reference/devices",children:"device"})," to be served a ",(0,t.jsx)(r.a,{href:"/platform/reference/bundles",children:"bundle"})," of your choosing, taking precedence over any ",(0,t.jsx)(r.a,{href:"/platform/reference/releases",children:"release"})," that otherwise would have been relevant for the duration of the override."]}),"\n",(0,t.jsx)(r.h2,{id:"scheduling",children:"Scheduling"}),"\n",(0,t.jsx)(r.p,{children:"Bundle overrides may be scheduled via start and end datetimes. In order for a bundle override to ever be applicable, it must have a start datetime. End datetimes are optional. A bundle override without an end datetime has a schedule that begins at the start datetime, and never ends."}),"\n",(0,t.jsx)(r.h3,{id:"stacking",children:"Stacking"}),"\n",(0,t.jsx)(r.p,{children:"When multiple bundle overrides' schedules overlap, only a single bundle override is ever applicable at any given moment. The applicable bundle override is always the one whose schedule you are within, and that started most recently."}),"\n",(0,t.jsx)(r.h2,{id:"mutability",children:"Mutability"}),"\n",(0,t.jsx)(r.p,{children:"Bundle overrides may be modified at any time to update their name, description, scheduling, and the bundle they serve."}),"\n",(0,t.jsx)(r.h2,{id:"distribution",children:"Distribution"}),"\n",(0,t.jsxs)(r.p,{children:["Bundle overrides, like ",(0,t.jsx)(r.a,{href:"releases",children:"releases"}),", are a method of bundle resolution detailed in the ",(0,t.jsx)(r.a,{href:"bundle-distribution",children:"bundle distribution"})," reference."]})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>l});var t=n(96540);const i={},d=t.createContext(i);function o(e){const r=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(d.Provider,{value:r},e.children)}}}]);