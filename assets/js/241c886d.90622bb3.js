"use strict";(self.webpackChunkparasola=self.webpackChunkparasola||[]).push([[6741],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(r),d=a,m=c["".concat(l,".").concat(d)]||c[d]||g[d]||i;return r?n.createElement(m,s(s({ref:t},u),{},{components:r})):n.createElement(m,s({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[c]="string"==typeof e?e:a,s[1]=o;for(var p=2;p<i;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9034:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>g,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const i={},s="Introduction to Asset Management",o={unversionedId:"guides/introduction-to-asset-management",id:"guides/introduction-to-asset-management",title:"Introduction to Asset Management",description:"This guide serves as a comprehensive introduction to asset management that will cover artifacts, artifact versions, binaries, binary parts, binary signatures, and signing keys.",source:"@site/docs/guides/introduction-to-asset-management.md",sourceDirName:"guides",slug:"/guides/introduction-to-asset-management",permalink:"/guides/introduction-to-asset-management",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"guides",previous:{title:"Overview",permalink:"/guides/overview"},next:{title:"Multipart Uploads With Binary Parts",permalink:"/guides/multipart-uploads-with-binary-parts"}},l={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Asset Management Resources",id:"asset-management-resources",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Creating an Artifact",id:"creating-an-artifact",level:3},{value:"Creating a Version",id:"creating-a-version",level:3},{value:"Creating Signing Keys",id:"creating-signing-keys",level:3},{value:"Creating a Binary",id:"creating-a-binary",level:3}],u={toc:p},c="wrapper";function g(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction-to-asset-management"},"Introduction to Asset Management"),(0,a.kt)("p",null,"This guide serves as a comprehensive introduction to asset management that will cover artifacts, artifact versions, binaries, binary parts, binary signatures, and signing keys."),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/peridio/morel/releases"},"Peridio CLI"),".",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Last tested with version 0.8.0.")))),(0,a.kt)("h2",{id:"asset-management-resources"},"Asset Management Resources"),(0,a.kt)("p",null,"Asset management comprises the following resources:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/reference/artifacts"},"Artifacts")," - define types for your binaries."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/reference/artifact-versions"},"Artifact Versions")," - define versions for your artifacts."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/reference/binaries"},"Binaries")," - define target-specific binaries for your artifact versions."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/reference/binary-parts"},"Binary Parts")," - facilitate multipart uploads."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/reference/binary-signatures"},"Binary Signatures")," - associate binaries with signatures and the corresponding signing keys."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/reference/signing-keys"},"Signing Keys")," - verify binary signatures.")),(0,a.kt)("h2",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,"The goal of this guide is to register a signed binary with Peridio from scratch."),(0,a.kt)("h3",{id:"creating-an-artifact"},"Creating an Artifact"),(0,a.kt)("p",null,"Create an artifact so that we have a type for our binary."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'peridio artifacts create \\\n  --organization-prn $PERIDIO_ORGANIZATION_PRN \\\n  --name "Toaster Firmware"\n')),(0,a.kt)("h3",{id:"creating-a-version"},"Creating a Version"),(0,a.kt)("p",null,"Create a version for that artifact."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'peridio artifact-versions create \\\n  --artifact-prn $PERIDIO_ARTIFACT_PRN \\\n  --version "1.0.0"\n')),(0,a.kt)("h3",{id:"creating-signing-keys"},"Creating Signing Keys"),(0,a.kt)("p",null,"If you don't have one already, we will need to create a signing key pair."),(0,a.kt)("p",null,"Create a private signing key. We will use this key to sign hashes of our binaries."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"openssl genpkey -algorithm Ed25519 -out private.pem\n")),(0,a.kt)("p",null,"Derive a public signing key. We will provide this key to Peridio to verify the binaries we upload are signed by the private key."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"openssl pkey -in private.pem -pubout -out public.pem\n")),(0,a.kt)("h3",{id:"creating-a-binary"},"Creating a Binary"),(0,a.kt)("p",null,"Create a binary for that version."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"peridio binaries create \\\n  --artifact-version-prn $PERIDIO_VERSION \\\n  --content-path $PERIDIO_CONTENT_PATH \\\n  --signing-key-pair $PERIDIO_SIGNING_KEY_PAIR \\\n  --target $PERIDIO_TARGET\n")),(0,a.kt)("p",null,"The above command will:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"ensure a binary with the provided target exists"),(0,a.kt)("li",{parentName:"ol"},"perform a multipart upload of the binary"),(0,a.kt)("li",{parentName:"ol"},"sign the binary")),(0,a.kt)("p",null,"At this point you will have a signed binary that is ready to be included in ",(0,a.kt)("a",{parentName:"p",href:"/reference/bundles"},"bundles")," and ultimately distributed via ",(0,a.kt)("a",{parentName:"p",href:"/reference/releases"},"releases"),"."))}g.isMDXComponent=!0}}]);