"use strict";(self.webpackChunkperidio_docs=self.webpackChunkperidio_docs||[]).push([[2129],{10340:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var t=n(74848),r=n(28453);const o={},a="Overview",s={id:"integration/android/overview",title:"Overview",description:"Peridio can be integrated with any variant of the Android OS by programming against the Peridio Device API via direct API integration.",source:"@site/docs/integration/android/overview.md",sourceDirName:"integration/android",slug:"/integration/android/overview",permalink:"/integration/android/overview",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"integration",previous:{title:"System integrations",permalink:"/integration/introduction"},next:{title:"Direct API integration",permalink:"/integration/android/reference-designs/direct-api-integration"}},d={},c=[{value:"Reference agent",id:"reference-agent",level:2},{value:"Reference designs",id:"reference-designs",level:2}];function l(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h1,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(i.p,{children:["Peridio can be integrated with any variant of the Android OS by programming against the Peridio ",(0,t.jsx)(i.a,{href:"/device-api",children:"Device API"})," via ",(0,t.jsx)(i.a,{href:"/integration/android/reference-designs/direct-api-integration",children:"direct API integration"}),"."]}),"\n",(0,t.jsx)(i.h2,{id:"reference-agent",children:"Reference agent"}),"\n",(0,t.jsxs)(i.p,{children:["The code that runs on a device that integrates with Peridio is referred to as a Peridio Agent. For a platform-agnostic overview of its optional and required capabilities, please reference the ",(0,t.jsx)(i.a,{href:"/integration/introduction#agent",children:"Peridio Agent"})," documentation."]}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.code,{children:"peridiod"}),", the standard Peridio agent reference implementation, does not currently support Android-specific interfaces, e.g., interacting with Android APIs and libraries to:"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Install APKs"}),": Managing package installations directly on the device using the Android Package Manager (e.g., ",(0,t.jsx)(i.code,{children:"PackageInstaller"})," API)."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Perform A/B updates"}),": Orchestrating seamless updates using the Android A/B (seamless updates) system, which involves switching between active and inactive partitions while ensuring rollback protection."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Store configuration and metadata"}),": Persisting configuration or metadata in areas that survive across reboots, are independent of A/B partitions, and are not wiped during factory resets (e.g., storing in a device-protected storage area or using Android's Key-Value Backup or Device Owner features)."]}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"These capabilities require deeper integration with Android's ecosystem than the current implementation provides."}),"\n",(0,t.jsx)(i.admonition,{type:"info",children:(0,t.jsxs)(i.p,{children:["Support for Android-specific capabilities in ",(0,t.jsx)(i.code,{children:"peridiod"})," is in-progress, but not yet ready for general consumption. If you would like to participate in a private beta, please reach out."]})}),"\n",(0,t.jsx)(i.p,{children:"The implication of the above is that while the surface area of the Peridio Device API is intentionally small to minimize integration efforts, there will be non-repeatable engineering required to complete the last-mile of integration: the download and application of binaries served by the Peridio Device API."}),"\n",(0,t.jsx)(i.h2,{id:"reference-designs",children:"Reference designs"}),"\n",(0,t.jsx)(i.p,{children:"While Android-specific hardware reference designs are still in private beta, the following options are available:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"/integration/android/reference-designs/direct-api-integration",children:"Direct API integration"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["Peridio maintains opinionated reference implementations for a variety of development kits and evaluation boards with respect to Embedded Linux platforms. These will still serve as a helpful context when reasoning about system design with Peridio. For more information, refer to the ",(0,t.jsx)(i.a,{href:"/integration/linux/overview#reference-designs",children:"Linux reference designs"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>s});var t=n(96540);const r={},o=t.createContext(r);function a(e){const i=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(o.Provider,{value:i},e.children)}}}]);