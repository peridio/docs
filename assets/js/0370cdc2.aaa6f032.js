"use strict";(self.webpackChunkparasola=self.webpackChunkparasola||[]).push([[9506],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>b});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),g=a,b=u["".concat(s,".").concat(g)]||u[g]||d[g]||i;return r?n.createElement(b,o(o({ref:t},p),{},{components:r})):n.createElement(b,o({ref:t},p))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},832:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const i={},o="Creating Binaries",l={unversionedId:"guides/creating-binaries",id:"guides/creating-binaries",title:"Creating Binaries",description:"This guide describes how to create binaries.",source:"@site/docs/guides/creating-binaries.md",sourceDirName:"guides",slug:"/guides/creating-binaries",permalink:"/guides/creating-binaries",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"guides",previous:{title:"Creating Artifacts",permalink:"/guides/creating-artifacts"},next:{title:"Creating Binary Parts",permalink:"/guides/creating-binary-parts"}},s={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create Binary",id:"create-binary",level:2},{value:"CLI",id:"cli",level:3},{value:"Create, Upload, and Sign",id:"create-upload-and-sign",level:4},{value:"Create",id:"create",level:4},{value:"API",id:"api",level:3},{value:"Web Console",id:"web-console",level:3}],p={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"creating-binaries"},"Creating Binaries"),(0,a.kt)("p",null,"This guide describes how to create binaries."),(0,a.kt)("p",null,"To learn more about Peridio binaries in general, see the ",(0,a.kt)("a",{parentName:"p",href:"/reference/binaries"},"binaries"),"\nreference."),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/peridio/morel/releases"},"Peridio CLI"),".",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Last tested with version 0.8.0.")))),(0,a.kt)("h2",{id:"create-binary"},"Create Binary"),(0,a.kt)("h3",{id:"cli"},"CLI"),(0,a.kt)("h4",{id:"create-upload-and-sign"},"Create, Upload, and Sign"),(0,a.kt)("p",null,"To create, upload, and sign a binary all at once:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"peridio binaries create \\\n  --artifact-version-prn $PERIDIO_ARTIFACT_VERSION_PRN \\\n  --content-path $PERIDIO_CONTENT_PATH \\\n  --signing-key-pair $PERIDIO_SIGNING_KEY_PAIR \\\n  --target $PERIDIO_TARGET\n")),(0,a.kt)("h4",{id:"create"},"Create"),(0,a.kt)("p",null,"If you wish to only create the binary record (and not upload nor sign content):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"peridio binaries create \\\n  --artifact-version-prn $PERIDIO_ARTIFACT_VERSION_PRN \\\n  --content-path $PERIDIO_CONTENT_PATH \\\n  --target $PERIDIO_TARGET \\\n  --skip-upload\n")),(0,a.kt)("p",null,"At this point you could still run the first command to automatically upload and sign the binary."),(0,a.kt)("p",null,"Alternatively you could manually perform a ",(0,a.kt)("a",{parentName:"p",href:"multipart-uploads-with-binary-parts"},"multipart upload with binary parts")," and then manually attach a signature by ",(0,a.kt)("a",{parentName:"p",href:"creating-binary-signatures"},"creating a binary signature"),"."),(0,a.kt)("h3",{id:"api"},"API"),(0,a.kt)("p",null,"Use the Peridio Admin API ",(0,a.kt)("a",{parentName:"p",href:"/admin-api#binaries/operation/create-a-binary"},"create-a-binary")," endpoint."),(0,a.kt)("h3",{id:"web-console"},"Web Console"),(0,a.kt)("p",null,"See the ",(0,a.kt)("a",{parentName:"p",href:"https://console.cremini.peridio.com"},"Peridio Web Console"),"."))}d.isMDXComponent=!0}}]);