"use strict";(self.webpackChunkparasola=self.webpackChunkparasola||[]).push([[5958],{94052:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var i=n(74848),r=n(28453);const s={},a=void 0,o={id:"cli/binaries/update",title:"update",description:"",source:"@site/docs/cli/binaries/update.md",sourceDirName:"cli/binaries",slug:"/cli/binaries/update",permalink:"/cli/binaries/update",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"cli",previous:{title:"list",permalink:"/cli/binaries/list"},next:{title:"create",permalink:"/cli/binary-parts/create"}},c={},l=[];function p(e){const t={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"Usage: peridio binaries update [OPTIONS] --prn <PRN>\n\nOptions:\n      --prn <PRN>                  The PRN of the resource you wish to update\n      --description <DESCRIPTION>  An arbitrary string attached to the resource. Often useful for displaying to users\n      --state <STATE>              The state to transition the binary to [possible values: destroyed, hashable, hashing, signable, signed, uploadable]\n      --hash <HASH>                The base64 encoding of the SHA256 hash of the binary's content\n      --size <SIZE>                The size of the binary in bytes\n  -h, --help                       Print help\n\n"})})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var i=n(96540);const r={},s=i.createContext(r);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);