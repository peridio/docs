"use strict";(self.webpackChunkparasola=self.webpackChunkparasola||[]).push([[7597],{34707:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var o=n(74848),r=n(28453);const s={},i=void 0,a={id:"cli/deployments/update",title:"update",description:"",source:"@site/docs/cli/deployments/update.md",sourceDirName:"cli/deployments",slug:"/cli/deployments/update",permalink:"/cli/deployments/update",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"cli",previous:{title:"list",permalink:"/cli/deployments/list"},next:{title:"create",permalink:"/cli/device-certificates/create"}},l={},c=[];function d(e){const t={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"Usage: peridio deployments update [OPTIONS] --deployment-name <DEPLOYMENT_NAME> --product-name <PRODUCT_NAME>\n\nOptions:\n      --delta-updatable <DELTA_UPDATABLE>\n          Whether or not the deployment will leverage Peridio-managed delta updates [possible values: true, false]\n      --deployment-name <DEPLOYMENT_NAME>\n          The name of the deployment (currently) to update\n      --firmware <FIRMWARE>\n          The UUID of the firmware to deploy\n      --is-active <IS_ACTIVE>\n          Whether or not the deployment is active [possible values: true, false]\n      --product-name <PRODUCT_NAME>\n          The name of the product you wish to create the resource within\n      --name <NAME>\n          The resource's name, meant to be displayable to users\n      --tags <TAGS>\n          A list of tags that must be present on a device for it to be eligible for this deployment\n      --version <VERSION>\n          A SemVer requirement that must be satisfied by a device's version for the device to be eligible for this deployment\n  -h, --help\n          Print help\n\n"})})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var o=n(96540);const r={},s=o.createContext(r);function i(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);