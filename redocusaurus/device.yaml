openapi: 3.1.0
info:
  license:
    name: Peridio
    url: https://github.com/peridio/parasola/blob/main/LICENSE
  description: >
    The Peridio Device API is the primary way for devices to interact with
    Peridio.


    # Global Headers


    The following headers may be supplied when requesting any endpoint.


    |key|value|description|

    |-|-|-|

    |peridio-release-prn|A release PRN.|See [release
    resolution](/platform/reference/releases#release-resolution). Informs
    Peridio of what release is currently active on the device. The preference
    should always be to supply this header with a valid value. If you supply
    this header, you should not supply the `peridio-release-version` header.|

    |peridio-release-version|A release version.|See [release
    resolution](/platform/reference/releases#release-resolution). This header is
    only used in exceptional cases when you don't have a PRN to supply via
    `peridio-release-prn`. In that case, you may supply this header and you
    should not supply the `peridio-release-prn` header.|

    |x-peridio-architecture|A firmware architecture.|Legacy. See [deployment
    eligibility](/platform/reference/deployments#deployment-eligibility). The
    architecture of the device's currently active firmware. When supplying any
    `x-peridio` header, you should supply all `x-peridio` headers.|

    |x-peridio-platform|A firmware platform.|Legacy. See [deployment
    eligibility](/platform/reference/deployments#deployment-eligibility). The
    platform of the device's currently active firmware. When supplying any
    `x-peridio` header, you should supply all `x-peridio` headers.|

    |x-peridio-product|A firmware product.|Legacy. See [deployment
    eligibility](/platform/reference/deployments#deployment-eligibility). The
    product of the device's currently active firmware. When supplying any
    `x-peridio` header, you should supply all `x-peridio` headers.|

    |x-peridio-uuid|A firmware UUID.|Legacy. See [deployment
    eligibility](/platform/reference/deployments#deployment-eligibility). The
    UUID of the device's currently active firmware. When supplying any
    `x-peridio` header, you should supply all `x-peridio` headers.|

    |x-peridio-version|A firmware version.|Legacy. See [deployment
    eligibility](/platform/reference/deployments#deployment-eligibility). The
    version of the device's currently active firmware. When supplying any
    `x-peridio` header, you should supply all `x-peridio` headers.|
  title: Peridio Device API
  version: 1.0.0
servers:
  - url: https://device.cremini.peridio.com
security:
  - MutualTLS: []
tags:
  - name: Devices
    id: devices
x-tagGroups:
  - name: Endpoints
    tags:
      - Devices
paths:
  /device/me:
    get:
      operationId: get-device-me
      summary: get device me
      description: >
        Returns information about the device identified by the request's
        authentication.


        ### Expandable


        This endpoint has an expandable response. See [expanding
        responses](/admin-api#section/Expanding-Responses).
      tags:
        - Devices
      parameters:
        - in: header
          name: peridio-release-prn
          schema:
            description: See [global headers](#global-headers).
            example: >-
              prn:1:a1ed0c4e-f222-4bb3-89dc-48320018875d:release:e4bf3021-b8d7-42d5-a1bd-52121427ebd0
            $ref: '#/components/schemas/prn'
          required: false
        - in: header
          name: peridio-release-version
          schema:
            description: See [global headers](#global-headers).
            $ref: '#/components/schemas/release-version'
          required: false
        - name: expand
          description: >
            See [expanding
            responses](https://docs.peridio.com/admin-api#section/Expanding-Responses).


            **Expandable Fields**


            For more information on each field, reference the response.


            - `cohort`
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      cohort:
                        $ref: '#/components/schemas/cohort'
                        description: >
                          Expand required. See [expanding
                          responses](#section/Expanding-Responses).


                          The cohort the device belongs to.
                      identifier:
                        $ref: '#/components/schemas/device-identifier'
                      quarantined:
                        type: boolean
  /device/update:
    get:
      operationId: get-device-update
      summary: get device update
      description: >
        This functionality has been superceded by [get
        update](#devices/operation/get-update).


        Returns information regarding whether an update is available via a
        [deployment](/admin-api#deployments).


        If an update is available, additional information describing the update
        is returned including a presigned URL to acquire the update.
      tags:
        - Devices
      parameters:
        - in: header
          name: x-peridio-uuid
          schema:
            description: See [global headers](#global-headers).
            $ref: '#/components/schemas/firmware-uuid'
          required: true
        - in: header
          name: peridio-release-prn
          schema:
            description: See [global headers](#global-headers).
            example: >-
              prn:1:a1ed0c4e-f222-4bb3-89dc-48320018875d:release:e4bf3021-b8d7-42d5-a1bd-52121427ebd0
            $ref: '#/components/schemas/prn'
          required: false
        - in: header
          name: peridio-release-version
          schema:
            description: See [global headers](#global-headers).
            $ref: '#/components/schemas/release-version'
          required: false
        - name: preflight
          in: query
          required: false
          schema:
            type: boolean
            default: false
            description: >
              **When `false`**


              The request will count towards update attempts. `firmware_url` in
              the response will be set to a presigned URL.


              **When `true`**


              The request will not count towards update attempts. `firmware_url`
              in the response will be `null`.


              For example, one may use `true` to check if an update is available
              when you don't yet intend to consume the update so that a device
              does not rack up a number of incomplete updates and eventually get
              quarantined (pending the failure configuration set on the relevant
              deployment).
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      update_available:
                        description: |
                          An update may not be available if:

                            1. There is no applicable deployment, i.e., the device is up to date.
                            2. The device or an applicable deployment is quarantined.
                        type: boolean
                      firmware_url:
                        description: A presigned HTTPS URL. Expires in 24 hours.
                        oneOf:
                          - type: 'null'
                          - type: string
                      firmware_meta:
                        oneOf:
                          - type: 'null'
                          - $ref: '#/components/schemas/firmware-metadata'
                      deployment_id:
                        description: >-
                          This is a vestigial field whose value is always
                          `null`.
                        type: 'null'
  /update:
    get:
      operationId: get-update
      summary: get update
      description: >
        Returns information regarding whether an update is available via a
        [release](/admin-api#releases).


        ### Expandable


        This endpoint has an expandable response. By default, only the `status`
        field is returned. See [expanding
        responses](/admin-api#section/Expanding-Responses).
      tags:
        - Devices
      parameters:
        - in: header
          name: peridio-release-prn
          schema:
            description: See [global headers](#global-headers).
            example: >-
              prn:1:a1ed0c4e-f222-4bb3-89dc-48320018875d:release:e4bf3021-b8d7-42d5-a1bd-52121427ebd0
            $ref: '#/components/schemas/prn'
          required: false
        - in: header
          name: peridio-release-version
          schema:
            description: See [global headers](#global-headers).
            $ref: '#/components/schemas/release-version'
          required: false
        - name: expand
          description: >
            See [expanding
            responses](https://docs.peridio.com/admin-api#section/Expanding-Responses).


            **Expandable Fields**


            For more information on each field, reference the response.


            - `bundle`

            - `release`

            - `manifest`
              - `artifact`
              - `artifact_version`
              - `url`
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                properties:
                  status:
                    enum:
                      - update
                      - no_update
                      - device_quarantine
                  release:
                    $ref: '#/components/schemas/release'
                    description: >
                      Expand required. See [expanding
                      responses](#section/Expanding-Responses).


                      The target release with respect to [release
                      resolution](/platform/reference/releases#release-resolution).
                  bundle:
                    $ref: '#/components/schemas/bundle'
                    description: >
                      Expand required. See [expanding
                      responses](#section/Expanding-Responses).


                      The bundle associated with `release`.
                  manifest:
                    description: >
                      Expand required. See [expanding
                      responses](#section/Expanding-Responses).


                      The manifest associated with `bundle`. Includes metadata
                      about the binaries available to download, including a
                      presigned download url.
                    type: array
                    items:
                      type: object
                      properties:
                        artifact:
                          $ref: '#/components/schemas/artifact'
                          description: >
                            Expand required. See [expanding
                            responses](#section/Expanding-Responses).


                            The artifact associated with `artifact_version`.
                        artifact_version:
                          $ref: '#/components/schemas/artifact-version'
                          description: >
                            Expand required. See [expanding
                            responses](#section/Expanding-Responses).


                            The artifact version associated with `binary_prn`.
                        binary_prn:
                          $ref: '#/components/schemas/prn'
                        hash:
                          type: string
                        url:
                          type: string
                        signatures:
                          $ref: '#/components/schemas/array-of-signatures'
components:
  securitySchemes:
    MutualTLS:
      type: mutualTLS
      description: >-
        The provided client certificate must be signed by a [CA
        certificate](https://docs.peridio.com/reference/ca-certificates)
        registered with Peridio.
  schemas:
    prn:
      description: >
        [Peridio Resource Names](/platform/reference/peridio-resource-names)
        (PRNs) uniquely identify Peridio resources.
      type: string
    release-version:
      description: >-
        The release version. If provided, it has to be a valid
        [version](https://hexdocs.pm/elixir/Version.html#content). Used in
        [dynamic release
        resolution](/platform/reference/releases#dynamic-resolution).
      example: 1.0.0
      type: string
    cohort-description:
      type: string
      minLength: 1
      maxLength: 256
    cohort-name:
      type: string
      minLength: 1
      maxLength: 128
    cohort:
      type: object
      properties:
        description:
          oneOf:
            - $ref: '#/components/schemas/cohort-description'
            - type: 'null'
        name:
          $ref: '#/components/schemas/cohort-name'
        organization_prn:
          $ref: '#/components/schemas/prn'
        prn:
          $ref: '#/components/schemas/prn'
        inserted_at:
          type: string
          format: date-time
        product_prn:
          $ref: '#/components/schemas/prn'
        updated_at:
          type: string
          format: date-time
    device-identifier:
      description: Uniquely identifies a device within an organization.
      type: string
      example: sn1234
    firmware-uuid:
      type: string
      format: uuid
      description: Uniquely identifies a firmware.
    product-architecture:
      type: string
    firmware-author:
      type: string
    platform:
      type: string
    product-name:
      type: string
      description: Uniquely identifies a product within an organization.
    vcs-identifier:
      example: d670460b4b4aece5915caf5c68d12f560a9fe3e4
      type: string
    version:
      description: Reference https://hexdocs.pm/elixir/Version.html#module-versions.
      example: 1.0.0-alpha.3
      type: string
    firmware-metadata:
      type: object
      properties:
        architecture:
          $ref: '#/components/schemas/product-architecture'
        author:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/firmware-author'
        description:
          oneOf:
            - type: 'null'
            - type: string
        fwup_version:
          oneOf:
            - type: 'null'
            - type: string
          description: The version of FWUP bundled within the firmware.
        misc:
          oneOf:
            - type: 'null'
            - type: string
        platform:
          $ref: '#/components/schemas/platform'
        product:
          $ref: '#/components/schemas/product-name'
        uuid:
          $ref: '#/components/schemas/firmware-uuid'
        vcs_identifier:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/vcs-identifier'
        version:
          $ref: '#/components/schemas/version'
    release-description:
      default: null
      oneOf:
        - type: string
        - type: 'null'
    release-name:
      type: string
    release-phase-type:
      type: string
      enum:
        - static
        - percent
    release-phase-value:
      description: >
        The phase value controls the distribution of the update to your fleet.


        Decimals in `[0.0, 1.0]` are treated as percents, e.g., to allow 20% of
        the cohort to update, you would specifiy `0.2`.


        Integers >= 2 are treated as absolute device counts, e.g., to allow 40
        of the cohort's devices to update, you would specifiy `40`.


        **NOTE:** `1` is a special value in that it represents `100%` and  once
        a release is updated to this value, the phase value can never be changed
        again.


        A release with a `phase_value` not equal to `1` is considered "phased".


        **NOTE:** There can only ever be a single release that is phased at a
        time within a cohort. Because of this, if there is already a phased
        release, it must be "completed" by setting the phase to `1`.
      type: number
      minimum: 0
      maximum: 100
    release-required:
      type: boolean
      description: >
        If `true`, this release must be passed through if encountered by a
        device.


        If `false`, this release will be skipped over when possible (if there
        are releases configured after it).
    release-schedule-availability:
      type: string
      format: date-time
      description: >-
        Before this date-time, the release will not be resolvable when checking
        for updates. You may use this to schedule a future release.
    release-schedule-complete:
      type: boolean
    release-version-requirement:
      description: >-
        The release version requirement. If provided, it has to be a valid
        [requirement](https://hexdocs.pm/elixir/Version.html#module-requirements).
        Used in [dynamic release
        resolution](/platform/reference/releases#dynamic-resolution).
      example: '== 1.0.0'
      type: string
    release:
      type: object
      properties:
        bundle_prn:
          $ref: '#/components/schemas/prn'
        cohort_prn:
          $ref: '#/components/schemas/prn'
        description:
          $ref: '#/components/schemas/release-description'
        name:
          $ref: '#/components/schemas/release-name'
        next_release_prn:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/prn'
        organization_prn:
          $ref: '#/components/schemas/prn'
        phase_type:
          $ref: '#/components/schemas/release-phase-type'
        phase_value:
          $ref: '#/components/schemas/release-phase-value'
        required:
          $ref: '#/components/schemas/release-required'
        schedule_date:
          $ref: '#/components/schemas/release-schedule-availability'
        schedule_complete:
          $ref: '#/components/schemas/release-schedule-complete'
        prn:
          $ref: '#/components/schemas/prn'
        inserted_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        version:
          $ref: '#/components/schemas/release-version'
        version_requirement:
          $ref: '#/components/schemas/release-version-requirement'
    artifact-version-item:
      type: object
      properties:
        prn:
          $ref: '#/components/schemas/prn'
        index:
          type: integer
    array-of-ordered-artifact-versions:
      type: array
      items:
        $ref: '#/components/schemas/artifact-version-item'
    bundle-name:
      oneOf:
        - type: 'null'
        - type: string
          minLength: 1
          maxLength: 128
    bundle:
      type: object
      properties:
        artifact_versions:
          $ref: '#/components/schemas/array-of-ordered-artifact-versions'
        name:
          $ref: '#/components/schemas/bundle-name'
        organization_prn:
          $ref: '#/components/schemas/prn'
        prn:
          $ref: '#/components/schemas/prn'
        inserted_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    artifact-description:
      type: string
      minLength: 1
      maxLength: 256
    artifact-name:
      type: string
      minLength: 1
      maxLength: 128
    artifact:
      type: object
      properties:
        description:
          oneOf:
            - $ref: '#/components/schemas/artifact-description'
            - type: 'null'
        inserted_at:
          type: string
          format: date-time
        name:
          $ref: '#/components/schemas/artifact-name'
        organization_prn:
          $ref: '#/components/schemas/prn'
        prn:
          $ref: '#/components/schemas/prn'
        updated_at:
          type: string
          format: date-time
    artifact-version-description:
      type: string
      minLength: 1
      maxLength: 256
    artifact-version-version:
      type: string
      minLength: 1
      maxLength: 128
    artifact-version:
      type: object
      properties:
        artifact_prn:
          $ref: '#/components/schemas/prn'
        description:
          oneOf:
            - $ref: '#/components/schemas/artifact-version-description'
            - type: 'null'
        inserted_at:
          type: string
          format: date-time
        organization_prn:
          $ref: '#/components/schemas/prn'
        prn:
          $ref: '#/components/schemas/prn'
        version:
          $ref: '#/components/schemas/artifact-version-version'
        updated_at:
          type: string
          format: date-time
    binary-signature-signature:
      type: string
      description: >
        The uppercase hex encoding of the ed25519 signature of the base64
        encoding of the SHA256 hash of the binary.
    signing-signature:
      type: object
      properties:
        signature:
          $ref: '#/components/schemas/binary-signature-signature'
        signing_key_prn:
          $ref: '#/components/schemas/prn'
    array-of-signatures:
      default: null
      oneOf:
        - type: 'null'
        - type: array
          items:
            $ref: '#/components/schemas/signing-signature'
